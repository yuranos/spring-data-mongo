//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.07 at 03:28:23 PM EET 
//


package com.yuranos.session.model;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.validation.constraints.Digits;
import javax.validation.constraints.Pattern;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import java.io.Serializable;
import java.math.BigDecimal;


/**
 * <p>Java class for TransactionDetails complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TransactionDetails">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="Amount" type="{http://api.thomascook.com/basket/1.0/common}Money" />
 *       &lt;attribute name="Fee" type="{http://api.thomascook.com/basket/1.0/common}Money" />
 *       &lt;attribute name="CustomData" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="PaymentReference" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="AuthorisationCode" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="SecurityVerificationStatus" type="{http://api.thomascook.com/basket/1.0/payment}SecurityVerificationStatus" />
 *       &lt;attribute name="PaymentTimestamp" type="{http://api.thomascook.com/basket/1.0/common}DateTime" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TransactionDetails", namespace = "http://api.thomascook.com/basket/1.0/payment")
public class TransactionDetails
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 12345L;
    @XmlAttribute(name = "Amount")
    @Digits(integer = 10, fraction = 2)
    protected BigDecimal amount;
    @XmlAttribute(name = "Fee")
    @Digits(integer = 10, fraction = 2)
    protected BigDecimal fee;
    @XmlAttribute(name = "CustomData")
    protected String customData;
    @XmlAttribute(name = "PaymentReference")
    protected String paymentReference;
    @XmlAttribute(name = "AuthorisationCode")
    protected String authorisationCode;
    @XmlAttribute(name = "SecurityVerificationStatus")
    protected SecurityVerificationStatus securityVerificationStatus;
    @XmlAttribute(name = "PaymentTimestamp")
    @Pattern(regexp = "\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}")
    protected String paymentTimestamp;

    /**
     * Gets the value of the amount property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getAmount() {
        return amount;
    }

    /**
     * Sets the value of the amount property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setAmount(BigDecimal value) {
        this.amount = value;
    }

    /**
     * Gets the value of the fee property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getFee() {
        return fee;
    }

    /**
     * Sets the value of the fee property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setFee(BigDecimal value) {
        this.fee = value;
    }

    /**
     * Gets the value of the customData property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCustomData() {
        return customData;
    }

    /**
     * Sets the value of the customData property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCustomData(String value) {
        this.customData = value;
    }

    /**
     * Gets the value of the paymentReference property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPaymentReference() {
        return paymentReference;
    }

    /**
     * Sets the value of the paymentReference property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPaymentReference(String value) {
        this.paymentReference = value;
    }

    /**
     * Gets the value of the authorisationCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAuthorisationCode() {
        return authorisationCode;
    }

    /**
     * Sets the value of the authorisationCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAuthorisationCode(String value) {
        this.authorisationCode = value;
    }

    /**
     * Gets the value of the securityVerificationStatus property.
     * 
     * @return
     *     possible object is
     *     {@link SecurityVerificationStatus }
     *     
     */
    public SecurityVerificationStatus getSecurityVerificationStatus() {
        return securityVerificationStatus;
    }

    /**
     * Sets the value of the securityVerificationStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link SecurityVerificationStatus }
     *     
     */
    public void setSecurityVerificationStatus(SecurityVerificationStatus value) {
        this.securityVerificationStatus = value;
    }

    /**
     * Gets the value of the paymentTimestamp property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPaymentTimestamp() {
        return paymentTimestamp;
    }

    /**
     * Sets the value of the paymentTimestamp property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPaymentTimestamp(String value) {
        this.paymentTimestamp = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TransactionDetails)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TransactionDetails that = ((TransactionDetails) object);
        {
            BigDecimal lhsAmount;
            lhsAmount = this.getAmount();
            BigDecimal rhsAmount;
            rhsAmount = that.getAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "amount", lhsAmount), LocatorUtils.property(thatLocator, "amount", rhsAmount), lhsAmount, rhsAmount)) {
                return false;
            }
        }
        {
            BigDecimal lhsFee;
            lhsFee = this.getFee();
            BigDecimal rhsFee;
            rhsFee = that.getFee();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fee", lhsFee), LocatorUtils.property(thatLocator, "fee", rhsFee), lhsFee, rhsFee)) {
                return false;
            }
        }
        {
            String lhsCustomData;
            lhsCustomData = this.getCustomData();
            String rhsCustomData;
            rhsCustomData = that.getCustomData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "customData", lhsCustomData), LocatorUtils.property(thatLocator, "customData", rhsCustomData), lhsCustomData, rhsCustomData)) {
                return false;
            }
        }
        {
            String lhsPaymentReference;
            lhsPaymentReference = this.getPaymentReference();
            String rhsPaymentReference;
            rhsPaymentReference = that.getPaymentReference();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentReference", lhsPaymentReference), LocatorUtils.property(thatLocator, "paymentReference", rhsPaymentReference), lhsPaymentReference, rhsPaymentReference)) {
                return false;
            }
        }
        {
            String lhsAuthorisationCode;
            lhsAuthorisationCode = this.getAuthorisationCode();
            String rhsAuthorisationCode;
            rhsAuthorisationCode = that.getAuthorisationCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "authorisationCode", lhsAuthorisationCode), LocatorUtils.property(thatLocator, "authorisationCode", rhsAuthorisationCode), lhsAuthorisationCode, rhsAuthorisationCode)) {
                return false;
            }
        }
        {
            SecurityVerificationStatus lhsSecurityVerificationStatus;
            lhsSecurityVerificationStatus = this.getSecurityVerificationStatus();
            SecurityVerificationStatus rhsSecurityVerificationStatus;
            rhsSecurityVerificationStatus = that.getSecurityVerificationStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "securityVerificationStatus", lhsSecurityVerificationStatus), LocatorUtils.property(thatLocator, "securityVerificationStatus", rhsSecurityVerificationStatus), lhsSecurityVerificationStatus, rhsSecurityVerificationStatus)) {
                return false;
            }
        }
        {
            String lhsPaymentTimestamp;
            lhsPaymentTimestamp = this.getPaymentTimestamp();
            String rhsPaymentTimestamp;
            rhsPaymentTimestamp = that.getPaymentTimestamp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentTimestamp", lhsPaymentTimestamp), LocatorUtils.property(thatLocator, "paymentTimestamp", rhsPaymentTimestamp), lhsPaymentTimestamp, rhsPaymentTimestamp)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            BigDecimal theAmount;
            theAmount = this.getAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "amount", theAmount), currentHashCode, theAmount);
        }
        {
            BigDecimal theFee;
            theFee = this.getFee();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fee", theFee), currentHashCode, theFee);
        }
        {
            String theCustomData;
            theCustomData = this.getCustomData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "customData", theCustomData), currentHashCode, theCustomData);
        }
        {
            String thePaymentReference;
            thePaymentReference = this.getPaymentReference();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentReference", thePaymentReference), currentHashCode, thePaymentReference);
        }
        {
            String theAuthorisationCode;
            theAuthorisationCode = this.getAuthorisationCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "authorisationCode", theAuthorisationCode), currentHashCode, theAuthorisationCode);
        }
        {
            SecurityVerificationStatus theSecurityVerificationStatus;
            theSecurityVerificationStatus = this.getSecurityVerificationStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "securityVerificationStatus", theSecurityVerificationStatus), currentHashCode, theSecurityVerificationStatus);
        }
        {
            String thePaymentTimestamp;
            thePaymentTimestamp = this.getPaymentTimestamp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentTimestamp", thePaymentTimestamp), currentHashCode, thePaymentTimestamp);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            BigDecimal theAmount;
            theAmount = this.getAmount();
            strategy.appendField(locator, this, "amount", buffer, theAmount);
        }
        {
            BigDecimal theFee;
            theFee = this.getFee();
            strategy.appendField(locator, this, "fee", buffer, theFee);
        }
        {
            String theCustomData;
            theCustomData = this.getCustomData();
            strategy.appendField(locator, this, "customData", buffer, theCustomData);
        }
        {
            String thePaymentReference;
            thePaymentReference = this.getPaymentReference();
            strategy.appendField(locator, this, "paymentReference", buffer, thePaymentReference);
        }
        {
            String theAuthorisationCode;
            theAuthorisationCode = this.getAuthorisationCode();
            strategy.appendField(locator, this, "authorisationCode", buffer, theAuthorisationCode);
        }
        {
            SecurityVerificationStatus theSecurityVerificationStatus;
            theSecurityVerificationStatus = this.getSecurityVerificationStatus();
            strategy.appendField(locator, this, "securityVerificationStatus", buffer, theSecurityVerificationStatus);
        }
        {
            String thePaymentTimestamp;
            thePaymentTimestamp = this.getPaymentTimestamp();
            strategy.appendField(locator, this, "paymentTimestamp", buffer, thePaymentTimestamp);
        }
        return buffer;
    }

}
