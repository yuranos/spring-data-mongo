//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.07 at 03:28:23 PM EET 
//


package com.yuranos.session.model;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.validation.constraints.Pattern;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import java.io.Serializable;


/**
 * <p>Java class for CommonMessageData complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CommonMessageData">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="TimeStamp" type="{http://api.thomascook.com/basket/1.0/common}DateTime" />
 *       &lt;attribute name="BasketId" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="Market" type="{http://api.thomascook.com/basket/1.0/common}Market" />
 *       &lt;attribute name="Provider" type="{http://api.thomascook.com/basket/1.0/common}Provider" />
 *       &lt;attribute name="ApiKey" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CommonMessageData")
public class CommonMessageData
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 12345L;
    @XmlAttribute(name = "TimeStamp")
    @Pattern(regexp = "\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}")
    protected String timeStamp;
    @XmlAttribute(name = "BasketId")
    protected String basketId;
    @XmlAttribute(name = "Market")
    protected Market market;
    @XmlAttribute(name = "Provider")
    protected Provider provider;
    @XmlAttribute(name = "ApiKey")
    protected String apiKey;

    /**
     * Gets the value of the timeStamp property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTimeStamp() {
        return timeStamp;
    }

    /**
     * Sets the value of the timeStamp property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTimeStamp(String value) {
        this.timeStamp = value;
    }

    /**
     * Gets the value of the basketId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBasketId() {
        return basketId;
    }

    /**
     * Sets the value of the basketId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBasketId(String value) {
        this.basketId = value;
    }

    /**
     * Gets the value of the market property.
     * 
     * @return
     *     possible object is
     *     {@link Market }
     *     
     */
    public Market getMarket() {
        return market;
    }

    /**
     * Sets the value of the market property.
     * 
     * @param value
     *     allowed object is
     *     {@link Market }
     *     
     */
    public void setMarket(Market value) {
        this.market = value;
    }

    /**
     * Gets the value of the provider property.
     * 
     * @return
     *     possible object is
     *     {@link Provider }
     *     
     */
    public Provider getProvider() {
        return provider;
    }

    /**
     * Sets the value of the provider property.
     * 
     * @param value
     *     allowed object is
     *     {@link Provider }
     *     
     */
    public void setProvider(Provider value) {
        this.provider = value;
    }

    /**
     * Gets the value of the apiKey property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getApiKey() {
        return apiKey;
    }

    /**
     * Sets the value of the apiKey property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setApiKey(String value) {
        this.apiKey = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CommonMessageData)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CommonMessageData that = ((CommonMessageData) object);
        {
            String lhsTimeStamp;
            lhsTimeStamp = this.getTimeStamp();
            String rhsTimeStamp;
            rhsTimeStamp = that.getTimeStamp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "timeStamp", lhsTimeStamp), LocatorUtils.property(thatLocator, "timeStamp", rhsTimeStamp), lhsTimeStamp, rhsTimeStamp)) {
                return false;
            }
        }
        {
            String lhsBasketId;
            lhsBasketId = this.getBasketId();
            String rhsBasketId;
            rhsBasketId = that.getBasketId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "basketId", lhsBasketId), LocatorUtils.property(thatLocator, "basketId", rhsBasketId), lhsBasketId, rhsBasketId)) {
                return false;
            }
        }
        {
            Market lhsMarket;
            lhsMarket = this.getMarket();
            Market rhsMarket;
            rhsMarket = that.getMarket();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "market", lhsMarket), LocatorUtils.property(thatLocator, "market", rhsMarket), lhsMarket, rhsMarket)) {
                return false;
            }
        }
        {
            Provider lhsProvider;
            lhsProvider = this.getProvider();
            Provider rhsProvider;
            rhsProvider = that.getProvider();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "provider", lhsProvider), LocatorUtils.property(thatLocator, "provider", rhsProvider), lhsProvider, rhsProvider)) {
                return false;
            }
        }
        {
            String lhsApiKey;
            lhsApiKey = this.getApiKey();
            String rhsApiKey;
            rhsApiKey = that.getApiKey();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "apiKey", lhsApiKey), LocatorUtils.property(thatLocator, "apiKey", rhsApiKey), lhsApiKey, rhsApiKey)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theTimeStamp;
            theTimeStamp = this.getTimeStamp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "timeStamp", theTimeStamp), currentHashCode, theTimeStamp);
        }
        {
            String theBasketId;
            theBasketId = this.getBasketId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "basketId", theBasketId), currentHashCode, theBasketId);
        }
        {
            Market theMarket;
            theMarket = this.getMarket();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "market", theMarket), currentHashCode, theMarket);
        }
        {
            Provider theProvider;
            theProvider = this.getProvider();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "provider", theProvider), currentHashCode, theProvider);
        }
        {
            String theApiKey;
            theApiKey = this.getApiKey();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "apiKey", theApiKey), currentHashCode, theApiKey);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theTimeStamp;
            theTimeStamp = this.getTimeStamp();
            strategy.appendField(locator, this, "timeStamp", buffer, theTimeStamp);
        }
        {
            String theBasketId;
            theBasketId = this.getBasketId();
            strategy.appendField(locator, this, "basketId", buffer, theBasketId);
        }
        {
            Market theMarket;
            theMarket = this.getMarket();
            strategy.appendField(locator, this, "market", buffer, theMarket);
        }
        {
            Provider theProvider;
            theProvider = this.getProvider();
            strategy.appendField(locator, this, "provider", buffer, theProvider);
        }
        {
            String theApiKey;
            theApiKey = this.getApiKey();
            strategy.appendField(locator, this, "apiKey", buffer, theApiKey);
        }
        return buffer;
    }

}
