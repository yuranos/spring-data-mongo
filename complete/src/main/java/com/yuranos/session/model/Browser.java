//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.07 at 03:28:23 PM EET 
//


package com.yuranos.session.model;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import java.io.Serializable;


/**
 * <p>Java class for Browser complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Browser">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="DeviceCategory" type="{http://api.thomascook.com/basket/1.0/payment}DeviceCategory" />
 *       &lt;attribute name="UserAgent" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="AcceptHeaders" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Browser", namespace = "http://api.thomascook.com/basket/1.0/payment")
public class Browser
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 12345L;
    @XmlAttribute(name = "DeviceCategory")
    protected DeviceCategory deviceCategory;
    @XmlAttribute(name = "UserAgent")
    protected String userAgent;
    @XmlAttribute(name = "AcceptHeaders")
    protected String acceptHeaders;

    /**
     * Gets the value of the deviceCategory property.
     * 
     * @return
     *     possible object is
     *     {@link DeviceCategory }
     *     
     */
    public DeviceCategory getDeviceCategory() {
        return deviceCategory;
    }

    /**
     * Sets the value of the deviceCategory property.
     * 
     * @param value
     *     allowed object is
     *     {@link DeviceCategory }
     *     
     */
    public void setDeviceCategory(DeviceCategory value) {
        this.deviceCategory = value;
    }

    /**
     * Gets the value of the userAgent property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUserAgent() {
        return userAgent;
    }

    /**
     * Sets the value of the userAgent property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUserAgent(String value) {
        this.userAgent = value;
    }

    /**
     * Gets the value of the acceptHeaders property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAcceptHeaders() {
        return acceptHeaders;
    }

    /**
     * Sets the value of the acceptHeaders property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAcceptHeaders(String value) {
        this.acceptHeaders = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Browser)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Browser that = ((Browser) object);
        {
            DeviceCategory lhsDeviceCategory;
            lhsDeviceCategory = this.getDeviceCategory();
            DeviceCategory rhsDeviceCategory;
            rhsDeviceCategory = that.getDeviceCategory();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deviceCategory", lhsDeviceCategory), LocatorUtils.property(thatLocator, "deviceCategory", rhsDeviceCategory), lhsDeviceCategory, rhsDeviceCategory)) {
                return false;
            }
        }
        {
            String lhsUserAgent;
            lhsUserAgent = this.getUserAgent();
            String rhsUserAgent;
            rhsUserAgent = that.getUserAgent();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userAgent", lhsUserAgent), LocatorUtils.property(thatLocator, "userAgent", rhsUserAgent), lhsUserAgent, rhsUserAgent)) {
                return false;
            }
        }
        {
            String lhsAcceptHeaders;
            lhsAcceptHeaders = this.getAcceptHeaders();
            String rhsAcceptHeaders;
            rhsAcceptHeaders = that.getAcceptHeaders();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acceptHeaders", lhsAcceptHeaders), LocatorUtils.property(thatLocator, "acceptHeaders", rhsAcceptHeaders), lhsAcceptHeaders, rhsAcceptHeaders)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            DeviceCategory theDeviceCategory;
            theDeviceCategory = this.getDeviceCategory();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deviceCategory", theDeviceCategory), currentHashCode, theDeviceCategory);
        }
        {
            String theUserAgent;
            theUserAgent = this.getUserAgent();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userAgent", theUserAgent), currentHashCode, theUserAgent);
        }
        {
            String theAcceptHeaders;
            theAcceptHeaders = this.getAcceptHeaders();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acceptHeaders", theAcceptHeaders), currentHashCode, theAcceptHeaders);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            DeviceCategory theDeviceCategory;
            theDeviceCategory = this.getDeviceCategory();
            strategy.appendField(locator, this, "deviceCategory", buffer, theDeviceCategory);
        }
        {
            String theUserAgent;
            theUserAgent = this.getUserAgent();
            strategy.appendField(locator, this, "userAgent", buffer, theUserAgent);
        }
        {
            String theAcceptHeaders;
            theAcceptHeaders = this.getAcceptHeaders();
            strategy.appendField(locator, this, "acceptHeaders", buffer, theAcceptHeaders);
        }
        return buffer;
    }

}
