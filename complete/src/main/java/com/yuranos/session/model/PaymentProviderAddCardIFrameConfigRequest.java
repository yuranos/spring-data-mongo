//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.07 at 03:28:23 PM EET 
//


package com.yuranos.session.model;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.validation.constraints.NotNull;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import java.io.Serializable;


/**
 * <p>Java class for PaymentProviderAddCardIFrameConfigRequest complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PaymentProviderAddCardIFrameConfigRequest">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="paymentProvider" type="{http://api.thomascook.com/basket/1.0/payment}PaymentProvider"/>
 *         &lt;element name="orderId" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="acceptUrl" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="exceptionUrl" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PaymentProviderAddCardIFrameConfigRequest", namespace = "http://api.thomascook.com/basket/1.0/payment", propOrder = {
    "paymentProvider",
    "orderId",
    "acceptUrl",
    "exceptionUrl"
})
public class PaymentProviderAddCardIFrameConfigRequest
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 12345L;
    @XmlElement(required = true)
    @NotNull
    protected PaymentProvider paymentProvider;
    protected String orderId;
    @XmlElement(required = true)
    @NotNull
    protected String acceptUrl;
    @XmlElement(required = true)
    @NotNull
    protected String exceptionUrl;

    /**
     * Gets the value of the paymentProvider property.
     * 
     * @return
     *     possible object is
     *     {@link PaymentProvider }
     *     
     */
    public PaymentProvider getPaymentProvider() {
        return paymentProvider;
    }

    /**
     * Sets the value of the paymentProvider property.
     * 
     * @param value
     *     allowed object is
     *     {@link PaymentProvider }
     *     
     */
    public void setPaymentProvider(PaymentProvider value) {
        this.paymentProvider = value;
    }

    /**
     * Gets the value of the orderId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOrderId() {
        return orderId;
    }

    /**
     * Sets the value of the orderId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOrderId(String value) {
        this.orderId = value;
    }

    /**
     * Gets the value of the acceptUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAcceptUrl() {
        return acceptUrl;
    }

    /**
     * Sets the value of the acceptUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAcceptUrl(String value) {
        this.acceptUrl = value;
    }

    /**
     * Gets the value of the exceptionUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExceptionUrl() {
        return exceptionUrl;
    }

    /**
     * Sets the value of the exceptionUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExceptionUrl(String value) {
        this.exceptionUrl = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PaymentProviderAddCardIFrameConfigRequest)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PaymentProviderAddCardIFrameConfigRequest that = ((PaymentProviderAddCardIFrameConfigRequest) object);
        {
            PaymentProvider lhsPaymentProvider;
            lhsPaymentProvider = this.getPaymentProvider();
            PaymentProvider rhsPaymentProvider;
            rhsPaymentProvider = that.getPaymentProvider();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentProvider", lhsPaymentProvider), LocatorUtils.property(thatLocator, "paymentProvider", rhsPaymentProvider), lhsPaymentProvider, rhsPaymentProvider)) {
                return false;
            }
        }
        {
            String lhsOrderId;
            lhsOrderId = this.getOrderId();
            String rhsOrderId;
            rhsOrderId = that.getOrderId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "orderId", lhsOrderId), LocatorUtils.property(thatLocator, "orderId", rhsOrderId), lhsOrderId, rhsOrderId)) {
                return false;
            }
        }
        {
            String lhsAcceptUrl;
            lhsAcceptUrl = this.getAcceptUrl();
            String rhsAcceptUrl;
            rhsAcceptUrl = that.getAcceptUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acceptUrl", lhsAcceptUrl), LocatorUtils.property(thatLocator, "acceptUrl", rhsAcceptUrl), lhsAcceptUrl, rhsAcceptUrl)) {
                return false;
            }
        }
        {
            String lhsExceptionUrl;
            lhsExceptionUrl = this.getExceptionUrl();
            String rhsExceptionUrl;
            rhsExceptionUrl = that.getExceptionUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "exceptionUrl", lhsExceptionUrl), LocatorUtils.property(thatLocator, "exceptionUrl", rhsExceptionUrl), lhsExceptionUrl, rhsExceptionUrl)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            PaymentProvider thePaymentProvider;
            thePaymentProvider = this.getPaymentProvider();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentProvider", thePaymentProvider), currentHashCode, thePaymentProvider);
        }
        {
            String theOrderId;
            theOrderId = this.getOrderId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orderId", theOrderId), currentHashCode, theOrderId);
        }
        {
            String theAcceptUrl;
            theAcceptUrl = this.getAcceptUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acceptUrl", theAcceptUrl), currentHashCode, theAcceptUrl);
        }
        {
            String theExceptionUrl;
            theExceptionUrl = this.getExceptionUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "exceptionUrl", theExceptionUrl), currentHashCode, theExceptionUrl);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            PaymentProvider thePaymentProvider;
            thePaymentProvider = this.getPaymentProvider();
            strategy.appendField(locator, this, "paymentProvider", buffer, thePaymentProvider);
        }
        {
            String theOrderId;
            theOrderId = this.getOrderId();
            strategy.appendField(locator, this, "orderId", buffer, theOrderId);
        }
        {
            String theAcceptUrl;
            theAcceptUrl = this.getAcceptUrl();
            strategy.appendField(locator, this, "acceptUrl", buffer, theAcceptUrl);
        }
        {
            String theExceptionUrl;
            theExceptionUrl = this.getExceptionUrl();
            strategy.appendField(locator, this, "exceptionUrl", buffer, theExceptionUrl);
        }
        return buffer;
    }

}
