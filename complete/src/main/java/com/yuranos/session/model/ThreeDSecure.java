//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.07 at 03:28:23 PM EET 
//


package com.yuranos.session.model;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.validation.constraints.Pattern;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import java.io.Serializable;


/**
 * <p>Java class for ThreeDSecure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ThreeDSecure">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="MerchantUrl" type="{http://www.w3.org/2001/XMLSchema}string" default="http://www.thomascook.com" />
 *       &lt;attribute name="PurchaseDescription" type="{http://www.w3.org/2001/XMLSchema}string" default="Thomascook Pacakge" />
 *       &lt;attribute name="PurchaseDatetime" type="{http://api.thomascook.com/basket/1.0/common}DateTime" />
 *       &lt;attribute name="IframeUrl" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ThreeDSecure", namespace = "http://api.thomascook.com/basket/1.0/payment")
public class ThreeDSecure
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 12345L;
    @XmlAttribute(name = "MerchantUrl")
    protected String merchantUrl;
    @XmlAttribute(name = "PurchaseDescription")
    protected String purchaseDescription;
    @XmlAttribute(name = "PurchaseDatetime")
    @Pattern(regexp = "\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}")
    protected String purchaseDatetime;
    @XmlAttribute(name = "IframeUrl")
    protected String iframeUrl;

    /**
     * Gets the value of the merchantUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMerchantUrl() {
        if (merchantUrl == null) {
            return "http://www.thomascook.com";
        } else {
            return merchantUrl;
        }
    }

    /**
     * Sets the value of the merchantUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMerchantUrl(String value) {
        this.merchantUrl = value;
    }

    /**
     * Gets the value of the purchaseDescription property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPurchaseDescription() {
        if (purchaseDescription == null) {
            return "Thomascook Pacakge";
        } else {
            return purchaseDescription;
        }
    }

    /**
     * Sets the value of the purchaseDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPurchaseDescription(String value) {
        this.purchaseDescription = value;
    }

    /**
     * Gets the value of the purchaseDatetime property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPurchaseDatetime() {
        return purchaseDatetime;
    }

    /**
     * Sets the value of the purchaseDatetime property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPurchaseDatetime(String value) {
        this.purchaseDatetime = value;
    }

    /**
     * Gets the value of the iframeUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIframeUrl() {
        return iframeUrl;
    }

    /**
     * Sets the value of the iframeUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIframeUrl(String value) {
        this.iframeUrl = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ThreeDSecure)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ThreeDSecure that = ((ThreeDSecure) object);
        {
            String lhsMerchantUrl;
            lhsMerchantUrl = this.getMerchantUrl();
            String rhsMerchantUrl;
            rhsMerchantUrl = that.getMerchantUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "merchantUrl", lhsMerchantUrl), LocatorUtils.property(thatLocator, "merchantUrl", rhsMerchantUrl), lhsMerchantUrl, rhsMerchantUrl)) {
                return false;
            }
        }
        {
            String lhsPurchaseDescription;
            lhsPurchaseDescription = this.getPurchaseDescription();
            String rhsPurchaseDescription;
            rhsPurchaseDescription = that.getPurchaseDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "purchaseDescription", lhsPurchaseDescription), LocatorUtils.property(thatLocator, "purchaseDescription", rhsPurchaseDescription), lhsPurchaseDescription, rhsPurchaseDescription)) {
                return false;
            }
        }
        {
            String lhsPurchaseDatetime;
            lhsPurchaseDatetime = this.getPurchaseDatetime();
            String rhsPurchaseDatetime;
            rhsPurchaseDatetime = that.getPurchaseDatetime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "purchaseDatetime", lhsPurchaseDatetime), LocatorUtils.property(thatLocator, "purchaseDatetime", rhsPurchaseDatetime), lhsPurchaseDatetime, rhsPurchaseDatetime)) {
                return false;
            }
        }
        {
            String lhsIframeUrl;
            lhsIframeUrl = this.getIframeUrl();
            String rhsIframeUrl;
            rhsIframeUrl = that.getIframeUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "iframeUrl", lhsIframeUrl), LocatorUtils.property(thatLocator, "iframeUrl", rhsIframeUrl), lhsIframeUrl, rhsIframeUrl)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theMerchantUrl;
            theMerchantUrl = this.getMerchantUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "merchantUrl", theMerchantUrl), currentHashCode, theMerchantUrl);
        }
        {
            String thePurchaseDescription;
            thePurchaseDescription = this.getPurchaseDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "purchaseDescription", thePurchaseDescription), currentHashCode, thePurchaseDescription);
        }
        {
            String thePurchaseDatetime;
            thePurchaseDatetime = this.getPurchaseDatetime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "purchaseDatetime", thePurchaseDatetime), currentHashCode, thePurchaseDatetime);
        }
        {
            String theIframeUrl;
            theIframeUrl = this.getIframeUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "iframeUrl", theIframeUrl), currentHashCode, theIframeUrl);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theMerchantUrl;
            theMerchantUrl = this.getMerchantUrl();
            strategy.appendField(locator, this, "merchantUrl", buffer, theMerchantUrl);
        }
        {
            String thePurchaseDescription;
            thePurchaseDescription = this.getPurchaseDescription();
            strategy.appendField(locator, this, "purchaseDescription", buffer, thePurchaseDescription);
        }
        {
            String thePurchaseDatetime;
            thePurchaseDatetime = this.getPurchaseDatetime();
            strategy.appendField(locator, this, "purchaseDatetime", buffer, thePurchaseDatetime);
        }
        {
            String theIframeUrl;
            theIframeUrl = this.getIframeUrl();
            strategy.appendField(locator, this, "iframeUrl", buffer, theIframeUrl);
        }
        return buffer;
    }

}
