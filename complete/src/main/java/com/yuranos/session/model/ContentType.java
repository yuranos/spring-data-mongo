//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.07 at 03:28:23 PM EET 
//


package com.yuranos.session.model;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import java.io.Serializable;


/**
 * Content related with the holiday package.
 * 
 * <p>Java class for ContentType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ContentType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence minOccurs="0">
 *         &lt;element name="HotelName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="GeoPath" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="StarRating" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="ImageUrl" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ContentType", propOrder = {
    "hotelName",
    "geoPath",
    "starRating",
    "imageUrl"
})
public class ContentType
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 12345L;
    @XmlElement(name = "HotelName")
    protected String hotelName;
    @XmlElement(name = "GeoPath")
    protected String geoPath;
    @XmlElement(name = "StarRating")
    protected String starRating;
    @XmlElement(name = "ImageUrl")
    protected String imageUrl;

    /**
     * Gets the value of the hotelName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHotelName() {
        return hotelName;
    }

    /**
     * Sets the value of the hotelName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHotelName(String value) {
        this.hotelName = value;
    }

    /**
     * Gets the value of the geoPath property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGeoPath() {
        return geoPath;
    }

    /**
     * Sets the value of the geoPath property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeoPath(String value) {
        this.geoPath = value;
    }

    /**
     * Gets the value of the starRating property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStarRating() {
        return starRating;
    }

    /**
     * Sets the value of the starRating property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStarRating(String value) {
        this.starRating = value;
    }

    /**
     * Gets the value of the imageUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getImageUrl() {
        return imageUrl;
    }

    /**
     * Sets the value of the imageUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setImageUrl(String value) {
        this.imageUrl = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ContentType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ContentType that = ((ContentType) object);
        {
            String lhsHotelName;
            lhsHotelName = this.getHotelName();
            String rhsHotelName;
            rhsHotelName = that.getHotelName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "hotelName", lhsHotelName), LocatorUtils.property(thatLocator, "hotelName", rhsHotelName), lhsHotelName, rhsHotelName)) {
                return false;
            }
        }
        {
            String lhsGeoPath;
            lhsGeoPath = this.getGeoPath();
            String rhsGeoPath;
            rhsGeoPath = that.getGeoPath();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "geoPath", lhsGeoPath), LocatorUtils.property(thatLocator, "geoPath", rhsGeoPath), lhsGeoPath, rhsGeoPath)) {
                return false;
            }
        }
        {
            String lhsStarRating;
            lhsStarRating = this.getStarRating();
            String rhsStarRating;
            rhsStarRating = that.getStarRating();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "starRating", lhsStarRating), LocatorUtils.property(thatLocator, "starRating", rhsStarRating), lhsStarRating, rhsStarRating)) {
                return false;
            }
        }
        {
            String lhsImageUrl;
            lhsImageUrl = this.getImageUrl();
            String rhsImageUrl;
            rhsImageUrl = that.getImageUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "imageUrl", lhsImageUrl), LocatorUtils.property(thatLocator, "imageUrl", rhsImageUrl), lhsImageUrl, rhsImageUrl)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theHotelName;
            theHotelName = this.getHotelName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "hotelName", theHotelName), currentHashCode, theHotelName);
        }
        {
            String theGeoPath;
            theGeoPath = this.getGeoPath();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geoPath", theGeoPath), currentHashCode, theGeoPath);
        }
        {
            String theStarRating;
            theStarRating = this.getStarRating();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "starRating", theStarRating), currentHashCode, theStarRating);
        }
        {
            String theImageUrl;
            theImageUrl = this.getImageUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "imageUrl", theImageUrl), currentHashCode, theImageUrl);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theHotelName;
            theHotelName = this.getHotelName();
            strategy.appendField(locator, this, "hotelName", buffer, theHotelName);
        }
        {
            String theGeoPath;
            theGeoPath = this.getGeoPath();
            strategy.appendField(locator, this, "geoPath", buffer, theGeoPath);
        }
        {
            String theStarRating;
            theStarRating = this.getStarRating();
            strategy.appendField(locator, this, "starRating", buffer, theStarRating);
        }
        {
            String theImageUrl;
            theImageUrl = this.getImageUrl();
            strategy.appendField(locator, this, "imageUrl", buffer, theImageUrl);
        }
        return buffer;
    }

}
