//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.07 at 03:28:23 PM EET 
//


package com.yuranos.session.model;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import java.io.Serializable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for RoomProfile complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RoomProfile">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="MealPlan" type="{http://api.thomascook.com/basket/1.0/accommodation}MealPlan"/>
 *         &lt;sequence>
 *           &lt;element name="GuestList" type="{http://api.thomascook.com/basket/1.0/accommodation}Guest" maxOccurs="unbounded"/>
 *         &lt;/sequence>
 *         &lt;sequence>
 *           &lt;element name="Prices" type="{http://api.thomascook.com/basket/1.0/accommodation}RoomPrice" maxOccurs="99" minOccurs="0"/>
 *         &lt;/sequence>
 *       &lt;/sequence>
 *       &lt;attGroup ref="{http://api.thomascook.com/basket/1.0/common}displayAttributes"/>
 *       &lt;attribute name="Code" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="ExtraBeds" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="NumAdults" type="{http://www.w3.org/2001/XMLSchema}integer" default="0" />
 *       &lt;attribute name="NumChildren" type="{http://www.w3.org/2001/XMLSchema}integer" default="0" />
 *       &lt;attribute name="NumInfants" type="{http://www.w3.org/2001/XMLSchema}integer" default="0" />
 *       &lt;attribute name="MinOccupancy" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="MaxOccupancy" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="Quantity" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="SuplementIndicator" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="FreeChildFlag" type="{http://www.w3.org/2001/XMLSchema}string" default="N" />
 *       &lt;attribute name="OriginalPriceType" type="{http://api.thomascook.com/basket/1.0/common}PriceTypeIndicator" default="PER_PERSON" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RoomProfile", namespace = "http://api.thomascook.com/basket/1.0/accommodation", propOrder = {
    "mealPlan",
    "guestList",
    "prices"
})
public class RoomProfile
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 12345L;
    @XmlElement(name = "MealPlan", required = true)
    @NotNull
    @Valid
    protected MealPlan mealPlan;
    @XmlElement(name = "GuestList", required = true)
    @NotNull
    @Size(min = 1)
    @Valid
    protected List<Guest> guestList;
    @XmlElement(name = "Prices")
    @Size(min = 0, max = 99)
    @Valid
    protected List<RoomPrice> prices;
    @XmlAttribute(name = "Code")
    protected String code;
    @XmlAttribute(name = "ExtraBeds")
    protected BigInteger extraBeds;
    @XmlAttribute(name = "NumAdults")
    protected BigInteger numAdults;
    @XmlAttribute(name = "NumChildren")
    protected BigInteger numChildren;
    @XmlAttribute(name = "NumInfants")
    protected BigInteger numInfants;
    @XmlAttribute(name = "MinOccupancy")
    protected BigInteger minOccupancy;
    @XmlAttribute(name = "MaxOccupancy")
    protected BigInteger maxOccupancy;
    @XmlAttribute(name = "Quantity")
    protected BigInteger quantity;
    @XmlAttribute(name = "SuplementIndicator")
    protected Boolean suplementIndicator;
    @XmlAttribute(name = "FreeChildFlag")
    protected String freeChildFlag;
    @XmlAttribute(name = "OriginalPriceType")
    protected PriceTypeIndicator originalPriceType;
    @XmlAttribute(name = "Key")
    protected String key;
    @XmlAttribute(name = "DisplayText")
    protected String displayText;

    /**
     * Gets the value of the mealPlan property.
     * 
     * @return
     *     possible object is
     *     {@link MealPlan }
     *     
     */
    public MealPlan getMealPlan() {
        return mealPlan;
    }

    /**
     * Sets the value of the mealPlan property.
     * 
     * @param value
     *     allowed object is
     *     {@link MealPlan }
     *     
     */
    public void setMealPlan(MealPlan value) {
        this.mealPlan = value;
    }

    /**
     * Gets the value of the guestList property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the guestList property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGuestList().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Guest }
     * 
     * 
     */
    public List<Guest> getGuestList() {
        if (guestList == null) {
            guestList = new ArrayList<Guest>();
        }
        return this.guestList;
    }

    /**
     * Gets the value of the prices property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the prices property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPrices().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RoomPrice }
     * 
     * 
     */
    public List<RoomPrice> getPrices() {
        if (prices == null) {
            prices = new ArrayList<RoomPrice>();
        }
        return this.prices;
    }

    /**
     * Gets the value of the code property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCode() {
        return code;
    }

    /**
     * Sets the value of the code property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCode(String value) {
        this.code = value;
    }

    /**
     * Gets the value of the extraBeds property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getExtraBeds() {
        return extraBeds;
    }

    /**
     * Sets the value of the extraBeds property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setExtraBeds(BigInteger value) {
        this.extraBeds = value;
    }

    /**
     * Gets the value of the numAdults property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNumAdults() {
        if (numAdults == null) {
            return new BigInteger("0");
        } else {
            return numAdults;
        }
    }

    /**
     * Sets the value of the numAdults property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumAdults(BigInteger value) {
        this.numAdults = value;
    }

    /**
     * Gets the value of the numChildren property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNumChildren() {
        if (numChildren == null) {
            return new BigInteger("0");
        } else {
            return numChildren;
        }
    }

    /**
     * Sets the value of the numChildren property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumChildren(BigInteger value) {
        this.numChildren = value;
    }

    /**
     * Gets the value of the numInfants property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNumInfants() {
        if (numInfants == null) {
            return new BigInteger("0");
        } else {
            return numInfants;
        }
    }

    /**
     * Sets the value of the numInfants property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumInfants(BigInteger value) {
        this.numInfants = value;
    }

    /**
     * Gets the value of the minOccupancy property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMinOccupancy() {
        return minOccupancy;
    }

    /**
     * Sets the value of the minOccupancy property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMinOccupancy(BigInteger value) {
        this.minOccupancy = value;
    }

    /**
     * Gets the value of the maxOccupancy property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaxOccupancy() {
        return maxOccupancy;
    }

    /**
     * Sets the value of the maxOccupancy property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaxOccupancy(BigInteger value) {
        this.maxOccupancy = value;
    }

    /**
     * Gets the value of the quantity property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getQuantity() {
        return quantity;
    }

    /**
     * Sets the value of the quantity property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setQuantity(BigInteger value) {
        this.quantity = value;
    }

    /**
     * Gets the value of the suplementIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isSuplementIndicator() {
        if (suplementIndicator == null) {
            return false;
        } else {
            return suplementIndicator;
        }
    }

    /**
     * Sets the value of the suplementIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSuplementIndicator(Boolean value) {
        this.suplementIndicator = value;
    }

    /**
     * Gets the value of the freeChildFlag property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFreeChildFlag() {
        if (freeChildFlag == null) {
            return "N";
        } else {
            return freeChildFlag;
        }
    }

    /**
     * Sets the value of the freeChildFlag property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFreeChildFlag(String value) {
        this.freeChildFlag = value;
    }

    /**
     * Gets the value of the originalPriceType property.
     * 
     * @return
     *     possible object is
     *     {@link PriceTypeIndicator }
     *     
     */
    public PriceTypeIndicator getOriginalPriceType() {
        if (originalPriceType == null) {
            return PriceTypeIndicator.PER_PERSON;
        } else {
            return originalPriceType;
        }
    }

    /**
     * Sets the value of the originalPriceType property.
     * 
     * @param value
     *     allowed object is
     *     {@link PriceTypeIndicator }
     *     
     */
    public void setOriginalPriceType(PriceTypeIndicator value) {
        this.originalPriceType = value;
    }

    /**
     * Gets the value of the key property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getKey() {
        return key;
    }

    /**
     * Sets the value of the key property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setKey(String value) {
        this.key = value;
    }

    /**
     * Gets the value of the displayText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayText() {
        return displayText;
    }

    /**
     * Sets the value of the displayText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayText(String value) {
        this.displayText = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof RoomProfile)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final RoomProfile that = ((RoomProfile) object);
        {
            MealPlan lhsMealPlan;
            lhsMealPlan = this.getMealPlan();
            MealPlan rhsMealPlan;
            rhsMealPlan = that.getMealPlan();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mealPlan", lhsMealPlan), LocatorUtils.property(thatLocator, "mealPlan", rhsMealPlan), lhsMealPlan, rhsMealPlan)) {
                return false;
            }
        }
        {
            List<Guest> lhsGuestList;
            lhsGuestList = (((this.guestList!= null)&&(!this.guestList.isEmpty()))?this.getGuestList():null);
            List<Guest> rhsGuestList;
            rhsGuestList = (((that.guestList!= null)&&(!that.guestList.isEmpty()))?that.getGuestList():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "guestList", lhsGuestList), LocatorUtils.property(thatLocator, "guestList", rhsGuestList), lhsGuestList, rhsGuestList)) {
                return false;
            }
        }
        {
            List<RoomPrice> lhsPrices;
            lhsPrices = (((this.prices!= null)&&(!this.prices.isEmpty()))?this.getPrices():null);
            List<RoomPrice> rhsPrices;
            rhsPrices = (((that.prices!= null)&&(!that.prices.isEmpty()))?that.getPrices():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "prices", lhsPrices), LocatorUtils.property(thatLocator, "prices", rhsPrices), lhsPrices, rhsPrices)) {
                return false;
            }
        }
        {
            String lhsCode;
            lhsCode = this.getCode();
            String rhsCode;
            rhsCode = that.getCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                return false;
            }
        }
        {
            BigInteger lhsExtraBeds;
            lhsExtraBeds = this.getExtraBeds();
            BigInteger rhsExtraBeds;
            rhsExtraBeds = that.getExtraBeds();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "extraBeds", lhsExtraBeds), LocatorUtils.property(thatLocator, "extraBeds", rhsExtraBeds), lhsExtraBeds, rhsExtraBeds)) {
                return false;
            }
        }
        {
            BigInteger lhsNumAdults;
            lhsNumAdults = this.getNumAdults();
            BigInteger rhsNumAdults;
            rhsNumAdults = that.getNumAdults();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numAdults", lhsNumAdults), LocatorUtils.property(thatLocator, "numAdults", rhsNumAdults), lhsNumAdults, rhsNumAdults)) {
                return false;
            }
        }
        {
            BigInteger lhsNumChildren;
            lhsNumChildren = this.getNumChildren();
            BigInteger rhsNumChildren;
            rhsNumChildren = that.getNumChildren();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numChildren", lhsNumChildren), LocatorUtils.property(thatLocator, "numChildren", rhsNumChildren), lhsNumChildren, rhsNumChildren)) {
                return false;
            }
        }
        {
            BigInteger lhsNumInfants;
            lhsNumInfants = this.getNumInfants();
            BigInteger rhsNumInfants;
            rhsNumInfants = that.getNumInfants();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numInfants", lhsNumInfants), LocatorUtils.property(thatLocator, "numInfants", rhsNumInfants), lhsNumInfants, rhsNumInfants)) {
                return false;
            }
        }
        {
            BigInteger lhsMinOccupancy;
            lhsMinOccupancy = this.getMinOccupancy();
            BigInteger rhsMinOccupancy;
            rhsMinOccupancy = that.getMinOccupancy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "minOccupancy", lhsMinOccupancy), LocatorUtils.property(thatLocator, "minOccupancy", rhsMinOccupancy), lhsMinOccupancy, rhsMinOccupancy)) {
                return false;
            }
        }
        {
            BigInteger lhsMaxOccupancy;
            lhsMaxOccupancy = this.getMaxOccupancy();
            BigInteger rhsMaxOccupancy;
            rhsMaxOccupancy = that.getMaxOccupancy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "maxOccupancy", lhsMaxOccupancy), LocatorUtils.property(thatLocator, "maxOccupancy", rhsMaxOccupancy), lhsMaxOccupancy, rhsMaxOccupancy)) {
                return false;
            }
        }
        {
            BigInteger lhsQuantity;
            lhsQuantity = this.getQuantity();
            BigInteger rhsQuantity;
            rhsQuantity = that.getQuantity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "quantity", lhsQuantity), LocatorUtils.property(thatLocator, "quantity", rhsQuantity), lhsQuantity, rhsQuantity)) {
                return false;
            }
        }
        {
            boolean lhsSuplementIndicator;
            lhsSuplementIndicator = ((this.suplementIndicator!= null)?this.isSuplementIndicator():false);
            boolean rhsSuplementIndicator;
            rhsSuplementIndicator = ((that.suplementIndicator!= null)?that.isSuplementIndicator():false);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "suplementIndicator", lhsSuplementIndicator), LocatorUtils.property(thatLocator, "suplementIndicator", rhsSuplementIndicator), lhsSuplementIndicator, rhsSuplementIndicator)) {
                return false;
            }
        }
        {
            String lhsFreeChildFlag;
            lhsFreeChildFlag = this.getFreeChildFlag();
            String rhsFreeChildFlag;
            rhsFreeChildFlag = that.getFreeChildFlag();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "freeChildFlag", lhsFreeChildFlag), LocatorUtils.property(thatLocator, "freeChildFlag", rhsFreeChildFlag), lhsFreeChildFlag, rhsFreeChildFlag)) {
                return false;
            }
        }
        {
            PriceTypeIndicator lhsOriginalPriceType;
            lhsOriginalPriceType = this.getOriginalPriceType();
            PriceTypeIndicator rhsOriginalPriceType;
            rhsOriginalPriceType = that.getOriginalPriceType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "originalPriceType", lhsOriginalPriceType), LocatorUtils.property(thatLocator, "originalPriceType", rhsOriginalPriceType), lhsOriginalPriceType, rhsOriginalPriceType)) {
                return false;
            }
        }
        {
            String lhsKey;
            lhsKey = this.getKey();
            String rhsKey;
            rhsKey = that.getKey();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "key", lhsKey), LocatorUtils.property(thatLocator, "key", rhsKey), lhsKey, rhsKey)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            MealPlan theMealPlan;
            theMealPlan = this.getMealPlan();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mealPlan", theMealPlan), currentHashCode, theMealPlan);
        }
        {
            List<Guest> theGuestList;
            theGuestList = (((this.guestList!= null)&&(!this.guestList.isEmpty()))?this.getGuestList():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "guestList", theGuestList), currentHashCode, theGuestList);
        }
        {
            List<RoomPrice> thePrices;
            thePrices = (((this.prices!= null)&&(!this.prices.isEmpty()))?this.getPrices():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "prices", thePrices), currentHashCode, thePrices);
        }
        {
            String theCode;
            theCode = this.getCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
        }
        {
            BigInteger theExtraBeds;
            theExtraBeds = this.getExtraBeds();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "extraBeds", theExtraBeds), currentHashCode, theExtraBeds);
        }
        {
            BigInteger theNumAdults;
            theNumAdults = this.getNumAdults();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numAdults", theNumAdults), currentHashCode, theNumAdults);
        }
        {
            BigInteger theNumChildren;
            theNumChildren = this.getNumChildren();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numChildren", theNumChildren), currentHashCode, theNumChildren);
        }
        {
            BigInteger theNumInfants;
            theNumInfants = this.getNumInfants();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numInfants", theNumInfants), currentHashCode, theNumInfants);
        }
        {
            BigInteger theMinOccupancy;
            theMinOccupancy = this.getMinOccupancy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "minOccupancy", theMinOccupancy), currentHashCode, theMinOccupancy);
        }
        {
            BigInteger theMaxOccupancy;
            theMaxOccupancy = this.getMaxOccupancy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "maxOccupancy", theMaxOccupancy), currentHashCode, theMaxOccupancy);
        }
        {
            BigInteger theQuantity;
            theQuantity = this.getQuantity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "quantity", theQuantity), currentHashCode, theQuantity);
        }
        {
            boolean theSuplementIndicator;
            theSuplementIndicator = ((this.suplementIndicator!= null)?this.isSuplementIndicator():false);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "suplementIndicator", theSuplementIndicator), currentHashCode, theSuplementIndicator);
        }
        {
            String theFreeChildFlag;
            theFreeChildFlag = this.getFreeChildFlag();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "freeChildFlag", theFreeChildFlag), currentHashCode, theFreeChildFlag);
        }
        {
            PriceTypeIndicator theOriginalPriceType;
            theOriginalPriceType = this.getOriginalPriceType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "originalPriceType", theOriginalPriceType), currentHashCode, theOriginalPriceType);
        }
        {
            String theKey;
            theKey = this.getKey();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "key", theKey), currentHashCode, theKey);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            MealPlan theMealPlan;
            theMealPlan = this.getMealPlan();
            strategy.appendField(locator, this, "mealPlan", buffer, theMealPlan);
        }
        {
            List<Guest> theGuestList;
            theGuestList = (((this.guestList!= null)&&(!this.guestList.isEmpty()))?this.getGuestList():null);
            strategy.appendField(locator, this, "guestList", buffer, theGuestList);
        }
        {
            List<RoomPrice> thePrices;
            thePrices = (((this.prices!= null)&&(!this.prices.isEmpty()))?this.getPrices():null);
            strategy.appendField(locator, this, "prices", buffer, thePrices);
        }
        {
            String theCode;
            theCode = this.getCode();
            strategy.appendField(locator, this, "code", buffer, theCode);
        }
        {
            BigInteger theExtraBeds;
            theExtraBeds = this.getExtraBeds();
            strategy.appendField(locator, this, "extraBeds", buffer, theExtraBeds);
        }
        {
            BigInteger theNumAdults;
            theNumAdults = this.getNumAdults();
            strategy.appendField(locator, this, "numAdults", buffer, theNumAdults);
        }
        {
            BigInteger theNumChildren;
            theNumChildren = this.getNumChildren();
            strategy.appendField(locator, this, "numChildren", buffer, theNumChildren);
        }
        {
            BigInteger theNumInfants;
            theNumInfants = this.getNumInfants();
            strategy.appendField(locator, this, "numInfants", buffer, theNumInfants);
        }
        {
            BigInteger theMinOccupancy;
            theMinOccupancy = this.getMinOccupancy();
            strategy.appendField(locator, this, "minOccupancy", buffer, theMinOccupancy);
        }
        {
            BigInteger theMaxOccupancy;
            theMaxOccupancy = this.getMaxOccupancy();
            strategy.appendField(locator, this, "maxOccupancy", buffer, theMaxOccupancy);
        }
        {
            BigInteger theQuantity;
            theQuantity = this.getQuantity();
            strategy.appendField(locator, this, "quantity", buffer, theQuantity);
        }
        {
            boolean theSuplementIndicator;
            theSuplementIndicator = ((this.suplementIndicator!= null)?this.isSuplementIndicator():false);
            strategy.appendField(locator, this, "suplementIndicator", buffer, theSuplementIndicator);
        }
        {
            String theFreeChildFlag;
            theFreeChildFlag = this.getFreeChildFlag();
            strategy.appendField(locator, this, "freeChildFlag", buffer, theFreeChildFlag);
        }
        {
            PriceTypeIndicator theOriginalPriceType;
            theOriginalPriceType = this.getOriginalPriceType();
            strategy.appendField(locator, this, "originalPriceType", buffer, theOriginalPriceType);
        }
        {
            String theKey;
            theKey = this.getKey();
            strategy.appendField(locator, this, "key", buffer, theKey);
        }
        {
            String theDisplayText;
            theDisplayText = this.getDisplayText();
            strategy.appendField(locator, this, "displayText", buffer, theDisplayText);
        }
        return buffer;
    }

    /**
     * Sets the value of the guestList property.
     * 
     * @param guestList
     *     allowed object is
     *     {@link Guest }
     *     
     */
    public void setGuestList(List<Guest> guestList) {
        this.guestList = guestList;
    }

    /**
     * Sets the value of the prices property.
     * 
     * @param prices
     *     allowed object is
     *     {@link RoomPrice }
     *     
     */
    public void setPrices(List<RoomPrice> prices) {
        this.prices = prices;
    }

}
