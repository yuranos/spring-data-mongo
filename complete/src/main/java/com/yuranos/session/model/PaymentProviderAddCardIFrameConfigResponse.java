//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.07 at 03:28:23 PM EET 
//


package com.yuranos.session.model;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.validation.Valid;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import java.io.Serializable;


/**
 * <p>Java class for PaymentProviderAddCardIFrameConfigResponse complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PaymentProviderAddCardIFrameConfigResponse">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="formParams" type="{http://api.thomascook.com/basket/1.0/common}Context" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="paymentProvider" type="{http://api.thomascook.com/basket/1.0/payment}PaymentProvider" />
 *       &lt;attribute name="enabled" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="iframeUrl" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="paymentTimerMins" type="{http://www.w3.org/2001/XMLSchema}int" />
 *       &lt;attribute name="siteCode" type="{http://api.thomascook.com/basket/1.0/common}SiteCode" />
 *       &lt;attribute name="packageProvider" type="{http://api.thomascook.com/basket/1.0/common}Provider" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PaymentProviderAddCardIFrameConfigResponse", namespace = "http://api.thomascook.com/basket/1.0/payment", propOrder = {
    "formParams"
})
public class PaymentProviderAddCardIFrameConfigResponse
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 12345L;
    @Valid
    protected Context formParams;
    @XmlAttribute(name = "paymentProvider")
    protected PaymentProvider paymentProvider;
    @XmlAttribute(name = "enabled")
    protected Boolean enabled;
    @XmlAttribute(name = "iframeUrl")
    protected String iframeUrl;
    @XmlAttribute(name = "paymentTimerMins")
    protected Integer paymentTimerMins;
    @XmlAttribute(name = "siteCode")
    protected SiteCode siteCode;
    @XmlAttribute(name = "packageProvider")
    protected Provider packageProvider;

    /**
     * Gets the value of the formParams property.
     * 
     * @return
     *     possible object is
     *     {@link Context }
     *     
     */
    public Context getFormParams() {
        return formParams;
    }

    /**
     * Sets the value of the formParams property.
     * 
     * @param value
     *     allowed object is
     *     {@link Context }
     *     
     */
    public void setFormParams(Context value) {
        this.formParams = value;
    }

    /**
     * Gets the value of the paymentProvider property.
     * 
     * @return
     *     possible object is
     *     {@link PaymentProvider }
     *     
     */
    public PaymentProvider getPaymentProvider() {
        return paymentProvider;
    }

    /**
     * Sets the value of the paymentProvider property.
     * 
     * @param value
     *     allowed object is
     *     {@link PaymentProvider }
     *     
     */
    public void setPaymentProvider(PaymentProvider value) {
        this.paymentProvider = value;
    }

    /**
     * Gets the value of the enabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean getEnabled() {
        return enabled;
    }

    /**
     * Sets the value of the enabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setEnabled(Boolean value) {
        this.enabled = value;
    }

    /**
     * Gets the value of the iframeUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIframeUrl() {
        return iframeUrl;
    }

    /**
     * Sets the value of the iframeUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIframeUrl(String value) {
        this.iframeUrl = value;
    }

    /**
     * Gets the value of the paymentTimerMins property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getPaymentTimerMins() {
        return paymentTimerMins;
    }

    /**
     * Sets the value of the paymentTimerMins property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setPaymentTimerMins(Integer value) {
        this.paymentTimerMins = value;
    }

    /**
     * Gets the value of the siteCode property.
     * 
     * @return
     *     possible object is
     *     {@link SiteCode }
     *     
     */
    public SiteCode getSiteCode() {
        return siteCode;
    }

    /**
     * Sets the value of the siteCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link SiteCode }
     *     
     */
    public void setSiteCode(SiteCode value) {
        this.siteCode = value;
    }

    /**
     * Gets the value of the packageProvider property.
     * 
     * @return
     *     possible object is
     *     {@link Provider }
     *     
     */
    public Provider getPackageProvider() {
        return packageProvider;
    }

    /**
     * Sets the value of the packageProvider property.
     * 
     * @param value
     *     allowed object is
     *     {@link Provider }
     *     
     */
    public void setPackageProvider(Provider value) {
        this.packageProvider = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PaymentProviderAddCardIFrameConfigResponse)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PaymentProviderAddCardIFrameConfigResponse that = ((PaymentProviderAddCardIFrameConfigResponse) object);
        {
            Context lhsFormParams;
            lhsFormParams = this.getFormParams();
            Context rhsFormParams;
            rhsFormParams = that.getFormParams();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "formParams", lhsFormParams), LocatorUtils.property(thatLocator, "formParams", rhsFormParams), lhsFormParams, rhsFormParams)) {
                return false;
            }
        }
        {
            PaymentProvider lhsPaymentProvider;
            lhsPaymentProvider = this.getPaymentProvider();
            PaymentProvider rhsPaymentProvider;
            rhsPaymentProvider = that.getPaymentProvider();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentProvider", lhsPaymentProvider), LocatorUtils.property(thatLocator, "paymentProvider", rhsPaymentProvider), lhsPaymentProvider, rhsPaymentProvider)) {
                return false;
            }
        }
        {
            Boolean lhsEnabled;
            lhsEnabled = this.getEnabled();
            Boolean rhsEnabled;
            rhsEnabled = that.getEnabled();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enabled", lhsEnabled), LocatorUtils.property(thatLocator, "enabled", rhsEnabled), lhsEnabled, rhsEnabled)) {
                return false;
            }
        }
        {
            String lhsIframeUrl;
            lhsIframeUrl = this.getIframeUrl();
            String rhsIframeUrl;
            rhsIframeUrl = that.getIframeUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "iframeUrl", lhsIframeUrl), LocatorUtils.property(thatLocator, "iframeUrl", rhsIframeUrl), lhsIframeUrl, rhsIframeUrl)) {
                return false;
            }
        }
        {
            Integer lhsPaymentTimerMins;
            lhsPaymentTimerMins = this.getPaymentTimerMins();
            Integer rhsPaymentTimerMins;
            rhsPaymentTimerMins = that.getPaymentTimerMins();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentTimerMins", lhsPaymentTimerMins), LocatorUtils.property(thatLocator, "paymentTimerMins", rhsPaymentTimerMins), lhsPaymentTimerMins, rhsPaymentTimerMins)) {
                return false;
            }
        }
        {
            SiteCode lhsSiteCode;
            lhsSiteCode = this.getSiteCode();
            SiteCode rhsSiteCode;
            rhsSiteCode = that.getSiteCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "siteCode", lhsSiteCode), LocatorUtils.property(thatLocator, "siteCode", rhsSiteCode), lhsSiteCode, rhsSiteCode)) {
                return false;
            }
        }
        {
            Provider lhsPackageProvider;
            lhsPackageProvider = this.getPackageProvider();
            Provider rhsPackageProvider;
            rhsPackageProvider = that.getPackageProvider();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "packageProvider", lhsPackageProvider), LocatorUtils.property(thatLocator, "packageProvider", rhsPackageProvider), lhsPackageProvider, rhsPackageProvider)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Context theFormParams;
            theFormParams = this.getFormParams();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "formParams", theFormParams), currentHashCode, theFormParams);
        }
        {
            PaymentProvider thePaymentProvider;
            thePaymentProvider = this.getPaymentProvider();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentProvider", thePaymentProvider), currentHashCode, thePaymentProvider);
        }
        {
            Boolean theEnabled;
            theEnabled = this.getEnabled();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enabled", theEnabled), currentHashCode, theEnabled);
        }
        {
            String theIframeUrl;
            theIframeUrl = this.getIframeUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "iframeUrl", theIframeUrl), currentHashCode, theIframeUrl);
        }
        {
            Integer thePaymentTimerMins;
            thePaymentTimerMins = this.getPaymentTimerMins();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentTimerMins", thePaymentTimerMins), currentHashCode, thePaymentTimerMins);
        }
        {
            SiteCode theSiteCode;
            theSiteCode = this.getSiteCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "siteCode", theSiteCode), currentHashCode, theSiteCode);
        }
        {
            Provider thePackageProvider;
            thePackageProvider = this.getPackageProvider();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "packageProvider", thePackageProvider), currentHashCode, thePackageProvider);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            Context theFormParams;
            theFormParams = this.getFormParams();
            strategy.appendField(locator, this, "formParams", buffer, theFormParams);
        }
        {
            PaymentProvider thePaymentProvider;
            thePaymentProvider = this.getPaymentProvider();
            strategy.appendField(locator, this, "paymentProvider", buffer, thePaymentProvider);
        }
        {
            Boolean theEnabled;
            theEnabled = this.getEnabled();
            strategy.appendField(locator, this, "enabled", buffer, theEnabled);
        }
        {
            String theIframeUrl;
            theIframeUrl = this.getIframeUrl();
            strategy.appendField(locator, this, "iframeUrl", buffer, theIframeUrl);
        }
        {
            Integer thePaymentTimerMins;
            thePaymentTimerMins = this.getPaymentTimerMins();
            strategy.appendField(locator, this, "paymentTimerMins", buffer, thePaymentTimerMins);
        }
        {
            SiteCode theSiteCode;
            theSiteCode = this.getSiteCode();
            strategy.appendField(locator, this, "siteCode", buffer, theSiteCode);
        }
        {
            Provider thePackageProvider;
            thePackageProvider = this.getPackageProvider();
            strategy.appendField(locator, this, "packageProvider", buffer, thePackageProvider);
        }
        return buffer;
    }

}
