//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.07 at 03:28:23 PM EET 
//


package com.yuranos.session.model;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.validation.Valid;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for PostBookingOperation complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PostBookingOperation">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="AdvancedPassengerInformation" type="{http://api.thomascook.com/basket/1.0/postBookingOperation}AdvancedPassengerInformation" minOccurs="0"/>
 *         &lt;element name="TransferPaymentInformation" type="{http://api.thomascook.com/basket/1.0/postBookingOperation}TransferPaymentInformation" minOccurs="0"/>
 *         &lt;sequence>
 *           &lt;element name="AttentionMessageInformation" type="{http://api.thomascook.com/basket/1.0/postBookingOperation}AttentionMessageInformation" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;/sequence>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PostBookingOperation", namespace = "http://api.thomascook.com/basket/1.0/postBookingOperation", propOrder = {
    "advancedPassengerInformation",
    "transferPaymentInformation",
    "attentionMessageInformation"
})
public class PostBookingOperation
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 12345L;
    @XmlElement(name = "AdvancedPassengerInformation")
    @Valid
    protected AdvancedPassengerInformation advancedPassengerInformation;
    @XmlElement(name = "TransferPaymentInformation")
    @Valid
    protected TransferPaymentInformation transferPaymentInformation;
    @XmlElement(name = "AttentionMessageInformation")
    @Valid
    protected List<AttentionMessageInformation> attentionMessageInformation;

    /**
     * Gets the value of the advancedPassengerInformation property.
     * 
     * @return
     *     possible object is
     *     {@link AdvancedPassengerInformation }
     *     
     */
    public AdvancedPassengerInformation getAdvancedPassengerInformation() {
        return advancedPassengerInformation;
    }

    /**
     * Sets the value of the advancedPassengerInformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link AdvancedPassengerInformation }
     *     
     */
    public void setAdvancedPassengerInformation(AdvancedPassengerInformation value) {
        this.advancedPassengerInformation = value;
    }

    /**
     * Gets the value of the transferPaymentInformation property.
     * 
     * @return
     *     possible object is
     *     {@link TransferPaymentInformation }
     *     
     */
    public TransferPaymentInformation getTransferPaymentInformation() {
        return transferPaymentInformation;
    }

    /**
     * Sets the value of the transferPaymentInformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link TransferPaymentInformation }
     *     
     */
    public void setTransferPaymentInformation(TransferPaymentInformation value) {
        this.transferPaymentInformation = value;
    }

    /**
     * Gets the value of the attentionMessageInformation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the attentionMessageInformation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAttentionMessageInformation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AttentionMessageInformation }
     * 
     * 
     */
    public List<AttentionMessageInformation> getAttentionMessageInformation() {
        if (attentionMessageInformation == null) {
            attentionMessageInformation = new ArrayList<AttentionMessageInformation>();
        }
        return this.attentionMessageInformation;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PostBookingOperation)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PostBookingOperation that = ((PostBookingOperation) object);
        {
            AdvancedPassengerInformation lhsAdvancedPassengerInformation;
            lhsAdvancedPassengerInformation = this.getAdvancedPassengerInformation();
            AdvancedPassengerInformation rhsAdvancedPassengerInformation;
            rhsAdvancedPassengerInformation = that.getAdvancedPassengerInformation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "advancedPassengerInformation", lhsAdvancedPassengerInformation), LocatorUtils.property(thatLocator, "advancedPassengerInformation", rhsAdvancedPassengerInformation), lhsAdvancedPassengerInformation, rhsAdvancedPassengerInformation)) {
                return false;
            }
        }
        {
            TransferPaymentInformation lhsTransferPaymentInformation;
            lhsTransferPaymentInformation = this.getTransferPaymentInformation();
            TransferPaymentInformation rhsTransferPaymentInformation;
            rhsTransferPaymentInformation = that.getTransferPaymentInformation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transferPaymentInformation", lhsTransferPaymentInformation), LocatorUtils.property(thatLocator, "transferPaymentInformation", rhsTransferPaymentInformation), lhsTransferPaymentInformation, rhsTransferPaymentInformation)) {
                return false;
            }
        }
        {
            List<AttentionMessageInformation> lhsAttentionMessageInformation;
            lhsAttentionMessageInformation = (((this.attentionMessageInformation!= null)&&(!this.attentionMessageInformation.isEmpty()))?this.getAttentionMessageInformation():null);
            List<AttentionMessageInformation> rhsAttentionMessageInformation;
            rhsAttentionMessageInformation = (((that.attentionMessageInformation!= null)&&(!that.attentionMessageInformation.isEmpty()))?that.getAttentionMessageInformation():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "attentionMessageInformation", lhsAttentionMessageInformation), LocatorUtils.property(thatLocator, "attentionMessageInformation", rhsAttentionMessageInformation), lhsAttentionMessageInformation, rhsAttentionMessageInformation)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            AdvancedPassengerInformation theAdvancedPassengerInformation;
            theAdvancedPassengerInformation = this.getAdvancedPassengerInformation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "advancedPassengerInformation", theAdvancedPassengerInformation), currentHashCode, theAdvancedPassengerInformation);
        }
        {
            TransferPaymentInformation theTransferPaymentInformation;
            theTransferPaymentInformation = this.getTransferPaymentInformation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transferPaymentInformation", theTransferPaymentInformation), currentHashCode, theTransferPaymentInformation);
        }
        {
            List<AttentionMessageInformation> theAttentionMessageInformation;
            theAttentionMessageInformation = (((this.attentionMessageInformation!= null)&&(!this.attentionMessageInformation.isEmpty()))?this.getAttentionMessageInformation():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "attentionMessageInformation", theAttentionMessageInformation), currentHashCode, theAttentionMessageInformation);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            AdvancedPassengerInformation theAdvancedPassengerInformation;
            theAdvancedPassengerInformation = this.getAdvancedPassengerInformation();
            strategy.appendField(locator, this, "advancedPassengerInformation", buffer, theAdvancedPassengerInformation);
        }
        {
            TransferPaymentInformation theTransferPaymentInformation;
            theTransferPaymentInformation = this.getTransferPaymentInformation();
            strategy.appendField(locator, this, "transferPaymentInformation", buffer, theTransferPaymentInformation);
        }
        {
            List<AttentionMessageInformation> theAttentionMessageInformation;
            theAttentionMessageInformation = (((this.attentionMessageInformation!= null)&&(!this.attentionMessageInformation.isEmpty()))?this.getAttentionMessageInformation():null);
            strategy.appendField(locator, this, "attentionMessageInformation", buffer, theAttentionMessageInformation);
        }
        return buffer;
    }

    /**
     * Sets the value of the attentionMessageInformation property.
     * 
     * @param attentionMessageInformation
     *     allowed object is
     *     {@link AttentionMessageInformation }
     *     
     */
    public void setAttentionMessageInformation(List<AttentionMessageInformation> attentionMessageInformation) {
        this.attentionMessageInformation = attentionMessageInformation;
    }

}
