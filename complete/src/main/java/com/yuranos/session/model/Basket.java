//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.07 at 03:28:23 PM EET 
//


package com.yuranos.session.model;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.validation.Valid;
import javax.validation.constraints.Digits;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import java.io.Serializable;
import java.lang.Package;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for Basket complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Basket">
 *   &lt;complexContent>
 *     &lt;extension base="{http://api.thomascook.com/basket/1.0/common}GenericResponseType">
 *       &lt;sequence>
 *         &lt;element name="Language" type="{http://www.w3.org/2001/XMLSchema}language" minOccurs="0"/>
 *         &lt;element name="CurrencyCode" type="{http://api.thomascook.com/basket/1.0/common}CurrencyCode" minOccurs="0"/>
 *         &lt;element name="Context" type="{http://api.thomascook.com/basket/1.0/common}Context" minOccurs="0"/>
 *         &lt;element name="Package" type="{http://api.thomascook.com/basket/1.0/package}Package"/>
 *         &lt;element name="PassengerList" type="{http://api.thomascook.com/basket/1.0/passenger}Passenger" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Insurances" type="{http://api.thomascook.com/basket/1.0/insurance}Insurances" minOccurs="0"/>
 *         &lt;element name="Extras" type="{http://api.thomascook.com/basket/1.0/extra}Extras" minOccurs="0"/>
 *         &lt;element name="AvailFlightList" type="{http://api.thomascook.com/basket/1.0/availFlight}AvtPackage" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="ContactDetails" type="{http://api.thomascook.com/basket/1.0/passenger}ContactDetail" minOccurs="0"/>
 *         &lt;element name="CostSummary" type="{http://api.thomascook.com/basket/1.0/common}CostSummary" minOccurs="0"/>
 *         &lt;element name="PaymentOptionList" type="{http://api.thomascook.com/basket/1.0/common}PaymentCombination" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="PaymentGroupsList" type="{http://api.thomascook.com/basket/1.0/common}PaymentGroup" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="SessionStack" type="{http://api.thomascook.com/basket/1.0/common}SessionStack" maxOccurs="99" minOccurs="0"/>
 *         &lt;element name="PaymentDetails" type="{http://api.thomascook.com/basket/1.0/payment}CardPaymentDetails" minOccurs="0"/>
 *         &lt;element name="Promotion" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="providerCodes" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *                 &lt;/sequence>
 *                 &lt;attribute name="PromoCode" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="paymentGroup" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="promotionPerson" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *                 &lt;attribute name="PromoDiscount" type="{http://api.thomascook.com/basket/1.0/common}Money" />
 *                 &lt;attribute name="PromoType" type="{http://api.thomascook.com/basket/1.0/common}PromoTypeEnum" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="userIsLogged" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="test" type="{http://api.thomascook.com/basket/1.0/test}test" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="BookingRef" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="ComresSessionId" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="BookingHoldRef" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="BookingHoldType" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="ConsultationRef" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="BookingStatus" type="{http://api.thomascook.com/basket/1.0/common}BookingStatusTypeEnum" />
 *       &lt;attribute name="SecureFromDeposit" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="AgentNumber" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="PaymentRequired" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="PaymentTransactionLock" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Basket", namespace = "http://api.thomascook.com/basket/1.0/basket", propOrder = {
    "language",
    "currencyCode",
    "context",
    "_package",
    "passengerList",
    "insurances",
    "extras",
    "availFlightList",
    "contactDetails",
    "costSummary",
    "paymentOptionList",
    "paymentGroupsList",
    "sessionStack",
    "paymentDetails",
    "promotion",
    "userIsLogged",
    "test"
})
public class Basket
    extends GenericResponseType
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 12345L;
    @XmlElement(name = "Language")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "language")
    @Pattern(regexp = "([a-zA-Z]{2}|[iI]-[a-zA-Z]+|[xX]-[a-zA-Z]{1,8})(-[a-zA-Z]{1,8})*")
    protected String language;
    @XmlElement(name = "CurrencyCode", defaultValue = "GBP")
    @Pattern(regexp = "[A-Z]{3}")
    protected String currencyCode;
    @XmlElement(name = "Context")
    @Valid
    protected Context context;
    @XmlElement(name = "Package", required = true)
    @NotNull
    @Valid
    protected com.yuranos.session.model.Package _package;
    @XmlElement(name = "PassengerList")
    @Valid
    protected List<Passenger> passengerList;
    @XmlElement(name = "Insurances")
    @Valid
    protected Insurances insurances;
    @XmlElement(name = "Extras")
    @Valid
    protected Extras extras;
    @XmlElement(name = "AvailFlightList")
    @Valid
    protected List<AvtPackage> availFlightList;
    @XmlElement(name = "ContactDetails")
    @Valid
    protected ContactDetail contactDetails;
    @XmlElement(name = "CostSummary")
    @Valid
    protected CostSummary costSummary;
    @XmlElement(name = "PaymentOptionList")
    @Valid
    protected List<PaymentCombination> paymentOptionList;
    @XmlElement(name = "PaymentGroupsList")
    @Valid
    protected List<PaymentGroup> paymentGroupsList;
    @XmlElement(name = "SessionStack")
    @Size(min = 0, max = 99)
    @Valid
    protected List<SessionStack> sessionStack;
    @XmlElement(name = "PaymentDetails")
    @Valid
    protected CardPaymentDetails paymentDetails;
    @XmlElement(name = "Promotion")
    @Valid
    protected Basket.Promotion promotion;
    @NotNull
    protected boolean userIsLogged;
    @Valid
    protected Test test;
    @XmlAttribute(name = "BookingRef")
    protected String bookingRef;
    @XmlAttribute(name = "ComresSessionId")
    protected String comresSessionId;
    @XmlAttribute(name = "BookingHoldRef")
    protected String bookingHoldRef;
    @XmlAttribute(name = "BookingHoldType")
    protected String bookingHoldType;
    @XmlAttribute(name = "ConsultationRef")
    protected String consultationRef;
    @XmlAttribute(name = "BookingStatus")
    protected BookingStatusTypeEnum bookingStatus;
    @XmlAttribute(name = "SecureFromDeposit")
    protected String secureFromDeposit;
    @XmlAttribute(name = "AgentNumber")
    protected String agentNumber;
    @XmlAttribute(name = "PaymentRequired")
    protected Boolean paymentRequired;
    @XmlAttribute(name = "PaymentTransactionLock")
    protected String paymentTransactionLock;

    /**
     * Gets the value of the language property.
     *
     * @return
     *     possible object is
     *     {@link String }
     *
     */
    public String getLanguage() {
        return language;
    }

    /**
     * Sets the value of the language property.
     *
     * @param value
     *     allowed object is
     *     {@link String }
     *
     */
    public void setLanguage(String value) {
        this.language = value;
    }

    /**
     * Gets the value of the currencyCode property.
     *
     * @return
     *     possible object is
     *     {@link String }
     *
     */
    public String getCurrencyCode() {
        return currencyCode;
    }

    /**
     * Sets the value of the currencyCode property.
     *
     * @param value
     *     allowed object is
     *     {@link String }
     *
     */
    public void setCurrencyCode(String value) {
        this.currencyCode = value;
    }

    /**
     * Gets the value of the context property.
     *
     * @return
     *     possible object is
     *     {@link Context }
     *
     */
    public Context getContext() {
        return context;
    }

    /**
     * Sets the value of the context property.
     *
     * @param value
     *     allowed object is
     *     {@link Context }
     *
     */
    public void setContext(Context value) {
        this.context = value;
    }

    /**
     * Gets the value of the package property.
     *
     * @return
     *     possible object is
     *     {@link Package }
     *
     */
    public com.yuranos.session.model.Package getPackage() {
        return _package;
    }

    /**
     * Sets the value of the package property.
     *
     * @param value
     *     allowed object is
     *     {@link Package }
     *
     */
    public void setPackage(com.yuranos.session.model.Package value) {
        this._package = value;
    }

    /**
     * Gets the value of the passengerList property.
     *
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the passengerList property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPassengerList().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Passenger }
     *
     *
     */
    public List<Passenger> getPassengerList() {
        if (passengerList == null) {
            passengerList = new ArrayList<Passenger>();
        }
        return this.passengerList;
    }

    /**
     * Gets the value of the insurances property.
     *
     * @return
     *     possible object is
     *     {@link Insurances }
     *
     */
    public Insurances getInsurances() {
        return insurances;
    }

    /**
     * Sets the value of the insurances property.
     *
     * @param value
     *     allowed object is
     *     {@link Insurances }
     *
     */
    public void setInsurances(Insurances value) {
        this.insurances = value;
    }

    /**
     * Gets the value of the extras property.
     *
     * @return
     *     possible object is
     *     {@link Extras }
     *
     */
    public Extras getExtras() {
        return extras;
    }

    /**
     * Sets the value of the extras property.
     *
     * @param value
     *     allowed object is
     *     {@link Extras }
     *
     */
    public void setExtras(Extras value) {
        this.extras = value;
    }

    /**
     * Gets the value of the availFlightList property.
     *
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the availFlightList property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAvailFlightList().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AvtPackage }
     *
     *
     */
    public List<AvtPackage> getAvailFlightList() {
        if (availFlightList == null) {
            availFlightList = new ArrayList<AvtPackage>();
        }
        return this.availFlightList;
    }

    /**
     * Gets the value of the contactDetails property.
     *
     * @return
     *     possible object is
     *     {@link ContactDetail }
     *
     */
    public ContactDetail getContactDetails() {
        return contactDetails;
    }

    /**
     * Sets the value of the contactDetails property.
     *
     * @param value
     *     allowed object is
     *     {@link ContactDetail }
     *
     */
    public void setContactDetails(ContactDetail value) {
        this.contactDetails = value;
    }

    /**
     * Gets the value of the costSummary property.
     *
     * @return
     *     possible object is
     *     {@link CostSummary }
     *
     */
    public CostSummary getCostSummary() {
        return costSummary;
    }

    /**
     * Sets the value of the costSummary property.
     *
     * @param value
     *     allowed object is
     *     {@link CostSummary }
     *
     */
    public void setCostSummary(CostSummary value) {
        this.costSummary = value;
    }

    /**
     * Gets the value of the paymentOptionList property.
     *
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the paymentOptionList property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPaymentOptionList().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PaymentCombination }
     *
     *
     */
    public List<PaymentCombination> getPaymentOptionList() {
        if (paymentOptionList == null) {
            paymentOptionList = new ArrayList<PaymentCombination>();
        }
        return this.paymentOptionList;
    }

    /**
     * Gets the value of the paymentGroupsList property.
     *
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the paymentGroupsList property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPaymentGroupsList().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PaymentGroup }
     *
     *
     */
    public List<PaymentGroup> getPaymentGroupsList() {
        if (paymentGroupsList == null) {
            paymentGroupsList = new ArrayList<PaymentGroup>();
        }
        return this.paymentGroupsList;
    }

    /**
     * Gets the value of the sessionStack property.
     *
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the sessionStack property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSessionStack().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SessionStack }
     *
     *
     */
    public List<SessionStack> getSessionStack() {
        if (sessionStack == null) {
            sessionStack = new ArrayList<SessionStack>();
        }
        return this.sessionStack;
    }

    /**
     * Gets the value of the paymentDetails property.
     *
     * @return
     *     possible object is
     *     {@link CardPaymentDetails }
     *
     */
    public CardPaymentDetails getPaymentDetails() {
        return paymentDetails;
    }

    /**
     * Sets the value of the paymentDetails property.
     *
     * @param value
     *     allowed object is
     *     {@link CardPaymentDetails }
     *
     */
    public void setPaymentDetails(CardPaymentDetails value) {
        this.paymentDetails = value;
    }

    /**
     * Gets the value of the promotion property.
     *
     * @return
     *     possible object is
     *     {@link Basket.Promotion }
     *
     */
    public Basket.Promotion getPromotion() {
        return promotion;
    }

    /**
     * Sets the value of the promotion property.
     *
     * @param value
     *     allowed object is
     *     {@link Basket.Promotion }
     *
     */
    public void setPromotion(Basket.Promotion value) {
        this.promotion = value;
    }

    /**
     * Gets the value of the userIsLogged property.
     *
     */
    public boolean isUserIsLogged() {
        return userIsLogged;
    }

    /**
     * Sets the value of the userIsLogged property.
     *
     */
    public void setUserIsLogged(boolean value) {
        this.userIsLogged = value;
    }

    /**
     * Gets the value of the test property.
     *
     * @return
     *     possible object is
     *     {@link Test }
     *
     */
    public Test getTest() {
        return test;
    }

    /**
     * Sets the value of the test property.
     *
     * @param value
     *     allowed object is
     *     {@link Test }
     *
     */
    public void setTest(Test value) {
        this.test = value;
    }

    /**
     * Gets the value of the bookingRef property.
     *
     * @return
     *     possible object is
     *     {@link String }
     *
     */
    public String getBookingRef() {
        return bookingRef;
    }

    /**
     * Sets the value of the bookingRef property.
     *
     * @param value
     *     allowed object is
     *     {@link String }
     *
     */
    public void setBookingRef(String value) {
        this.bookingRef = value;
    }

    /**
     * Gets the value of the comresSessionId property.
     *
     * @return
     *     possible object is
     *     {@link String }
     *
     */
    public String getComresSessionId() {
        return comresSessionId;
    }

    /**
     * Sets the value of the comresSessionId property.
     *
     * @param value
     *     allowed object is
     *     {@link String }
     *
     */
    public void setComresSessionId(String value) {
        this.comresSessionId = value;
    }

    /**
     * Gets the value of the bookingHoldRef property.
     *
     * @return
     *     possible object is
     *     {@link String }
     *
     */
    public String getBookingHoldRef() {
        return bookingHoldRef;
    }

    /**
     * Sets the value of the bookingHoldRef property.
     *
     * @param value
     *     allowed object is
     *     {@link String }
     *
     */
    public void setBookingHoldRef(String value) {
        this.bookingHoldRef = value;
    }

    /**
     * Gets the value of the bookingHoldType property.
     *
     * @return
     *     possible object is
     *     {@link String }
     *
     */
    public String getBookingHoldType() {
        return bookingHoldType;
    }

    /**
     * Sets the value of the bookingHoldType property.
     *
     * @param value
     *     allowed object is
     *     {@link String }
     *
     */
    public void setBookingHoldType(String value) {
        this.bookingHoldType = value;
    }

    /**
     * Gets the value of the consultationRef property.
     *
     * @return
     *     possible object is
     *     {@link String }
     *
     */
    public String getConsultationRef() {
        return consultationRef;
    }

    /**
     * Sets the value of the consultationRef property.
     *
     * @param value
     *     allowed object is
     *     {@link String }
     *
     */
    public void setConsultationRef(String value) {
        this.consultationRef = value;
    }

    /**
     * Gets the value of the bookingStatus property.
     *
     * @return
     *     possible object is
     *     {@link BookingStatusTypeEnum }
     *
     */
    public BookingStatusTypeEnum getBookingStatus() {
        return bookingStatus;
    }

    /**
     * Sets the value of the bookingStatus property.
     *
     * @param value
     *     allowed object is
     *     {@link BookingStatusTypeEnum }
     *
     */
    public void setBookingStatus(BookingStatusTypeEnum value) {
        this.bookingStatus = value;
    }

    /**
     * Gets the value of the secureFromDeposit property.
     *
     * @return
     *     possible object is
     *     {@link String }
     *
     */
    public String getSecureFromDeposit() {
        return secureFromDeposit;
    }

    /**
     * Sets the value of the secureFromDeposit property.
     *
     * @param value
     *     allowed object is
     *     {@link String }
     *
     */
    public void setSecureFromDeposit(String value) {
        this.secureFromDeposit = value;
    }

    /**
     * Gets the value of the agentNumber property.
     *
     * @return
     *     possible object is
     *     {@link String }
     *
     */
    public String getAgentNumber() {
        return agentNumber;
    }

    /**
     * Sets the value of the agentNumber property.
     *
     * @param value
     *     allowed object is
     *     {@link String }
     *
     */
    public void setAgentNumber(String value) {
        this.agentNumber = value;
    }

    /**
     * Gets the value of the paymentRequired property.
     *
     * @return
     *     possible object is
     *     {@link Boolean }
     *
     */
    public Boolean getPaymentRequired() {
        return paymentRequired;
    }

    /**
     * Sets the value of the paymentRequired property.
     *
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *
     */
    public void setPaymentRequired(Boolean value) {
        this.paymentRequired = value;
    }

    /**
     * Gets the value of the paymentTransactionLock property.
     *
     * @return
     *     possible object is
     *     {@link String }
     *
     */
    public String getPaymentTransactionLock() {
        return paymentTransactionLock;
    }

    /**
     * Sets the value of the paymentTransactionLock property.
     *
     * @param value
     *     allowed object is
     *     {@link String }
     *
     */
    public void setPaymentTransactionLock(String value) {
        this.paymentTransactionLock = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Basket)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final Basket that = ((Basket) object);
        {
            String lhsLanguage;
            lhsLanguage = this.getLanguage();
            String rhsLanguage;
            rhsLanguage = that.getLanguage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "language", lhsLanguage), LocatorUtils.property(thatLocator, "language", rhsLanguage), lhsLanguage, rhsLanguage)) {
                return false;
            }
        }
        {
            String lhsCurrencyCode;
            lhsCurrencyCode = this.getCurrencyCode();
            String rhsCurrencyCode;
            rhsCurrencyCode = that.getCurrencyCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "currencyCode", lhsCurrencyCode), LocatorUtils.property(thatLocator, "currencyCode", rhsCurrencyCode), lhsCurrencyCode, rhsCurrencyCode)) {
                return false;
            }
        }
        {
            Context lhsContext;
            lhsContext = this.getContext();
            Context rhsContext;
            rhsContext = that.getContext();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "context", lhsContext), LocatorUtils.property(thatLocator, "context", rhsContext), lhsContext, rhsContext)) {
                return false;
            }
        }
        {
            com.yuranos.session.model.Package lhsPackage;
            lhsPackage = this.getPackage();
            com.yuranos.session.model.Package rhsPackage;
            rhsPackage = that.getPackage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "_package", lhsPackage), LocatorUtils.property(thatLocator, "_package", rhsPackage), lhsPackage, rhsPackage)) {
                return false;
            }
        }
        {
            List<Passenger> lhsPassengerList;
            lhsPassengerList = (((this.passengerList!= null)&&(!this.passengerList.isEmpty()))?this.getPassengerList():null);
            List<Passenger> rhsPassengerList;
            rhsPassengerList = (((that.passengerList!= null)&&(!that.passengerList.isEmpty()))?that.getPassengerList():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "passengerList", lhsPassengerList), LocatorUtils.property(thatLocator, "passengerList", rhsPassengerList), lhsPassengerList, rhsPassengerList)) {
                return false;
            }
        }
        {
            Insurances lhsInsurances;
            lhsInsurances = this.getInsurances();
            Insurances rhsInsurances;
            rhsInsurances = that.getInsurances();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "insurances", lhsInsurances), LocatorUtils.property(thatLocator, "insurances", rhsInsurances), lhsInsurances, rhsInsurances)) {
                return false;
            }
        }
        {
            Extras lhsExtras;
            lhsExtras = this.getExtras();
            Extras rhsExtras;
            rhsExtras = that.getExtras();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "extras", lhsExtras), LocatorUtils.property(thatLocator, "extras", rhsExtras), lhsExtras, rhsExtras)) {
                return false;
            }
        }
        {
            List<AvtPackage> lhsAvailFlightList;
            lhsAvailFlightList = (((this.availFlightList!= null)&&(!this.availFlightList.isEmpty()))?this.getAvailFlightList():null);
            List<AvtPackage> rhsAvailFlightList;
            rhsAvailFlightList = (((that.availFlightList!= null)&&(!that.availFlightList.isEmpty()))?that.getAvailFlightList():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "availFlightList", lhsAvailFlightList), LocatorUtils.property(thatLocator, "availFlightList", rhsAvailFlightList), lhsAvailFlightList, rhsAvailFlightList)) {
                return false;
            }
        }
        {
            ContactDetail lhsContactDetails;
            lhsContactDetails = this.getContactDetails();
            ContactDetail rhsContactDetails;
            rhsContactDetails = that.getContactDetails();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contactDetails", lhsContactDetails), LocatorUtils.property(thatLocator, "contactDetails", rhsContactDetails), lhsContactDetails, rhsContactDetails)) {
                return false;
            }
        }
        {
            CostSummary lhsCostSummary;
            lhsCostSummary = this.getCostSummary();
            CostSummary rhsCostSummary;
            rhsCostSummary = that.getCostSummary();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "costSummary", lhsCostSummary), LocatorUtils.property(thatLocator, "costSummary", rhsCostSummary), lhsCostSummary, rhsCostSummary)) {
                return false;
            }
        }
        {
            List<PaymentCombination> lhsPaymentOptionList;
            lhsPaymentOptionList = (((this.paymentOptionList!= null)&&(!this.paymentOptionList.isEmpty()))?this.getPaymentOptionList():null);
            List<PaymentCombination> rhsPaymentOptionList;
            rhsPaymentOptionList = (((that.paymentOptionList!= null)&&(!that.paymentOptionList.isEmpty()))?that.getPaymentOptionList():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentOptionList", lhsPaymentOptionList), LocatorUtils.property(thatLocator, "paymentOptionList", rhsPaymentOptionList), lhsPaymentOptionList, rhsPaymentOptionList)) {
                return false;
            }
        }
        {
            List<PaymentGroup> lhsPaymentGroupsList;
            lhsPaymentGroupsList = (((this.paymentGroupsList!= null)&&(!this.paymentGroupsList.isEmpty()))?this.getPaymentGroupsList():null);
            List<PaymentGroup> rhsPaymentGroupsList;
            rhsPaymentGroupsList = (((that.paymentGroupsList!= null)&&(!that.paymentGroupsList.isEmpty()))?that.getPaymentGroupsList():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentGroupsList", lhsPaymentGroupsList), LocatorUtils.property(thatLocator, "paymentGroupsList", rhsPaymentGroupsList), lhsPaymentGroupsList, rhsPaymentGroupsList)) {
                return false;
            }
        }
        {
            List<SessionStack> lhsSessionStack;
            lhsSessionStack = (((this.sessionStack!= null)&&(!this.sessionStack.isEmpty()))?this.getSessionStack():null);
            List<SessionStack> rhsSessionStack;
            rhsSessionStack = (((that.sessionStack!= null)&&(!that.sessionStack.isEmpty()))?that.getSessionStack():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sessionStack", lhsSessionStack), LocatorUtils.property(thatLocator, "sessionStack", rhsSessionStack), lhsSessionStack, rhsSessionStack)) {
                return false;
            }
        }
        {
            CardPaymentDetails lhsPaymentDetails;
            lhsPaymentDetails = this.getPaymentDetails();
            CardPaymentDetails rhsPaymentDetails;
            rhsPaymentDetails = that.getPaymentDetails();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentDetails", lhsPaymentDetails), LocatorUtils.property(thatLocator, "paymentDetails", rhsPaymentDetails), lhsPaymentDetails, rhsPaymentDetails)) {
                return false;
            }
        }
        {
            Basket.Promotion lhsPromotion;
            lhsPromotion = this.getPromotion();
            Basket.Promotion rhsPromotion;
            rhsPromotion = that.getPromotion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "promotion", lhsPromotion), LocatorUtils.property(thatLocator, "promotion", rhsPromotion), lhsPromotion, rhsPromotion)) {
                return false;
            }
        }
        {
            boolean lhsUserIsLogged;
            lhsUserIsLogged = (true?this.isUserIsLogged():false);
            boolean rhsUserIsLogged;
            rhsUserIsLogged = (true?that.isUserIsLogged():false);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userIsLogged", lhsUserIsLogged), LocatorUtils.property(thatLocator, "userIsLogged", rhsUserIsLogged), lhsUserIsLogged, rhsUserIsLogged)) {
                return false;
            }
        }
        {
            Test lhsTest;
            lhsTest = this.getTest();
            Test rhsTest;
            rhsTest = that.getTest();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "test", lhsTest), LocatorUtils.property(thatLocator, "test", rhsTest), lhsTest, rhsTest)) {
                return false;
            }
        }
        {
            String lhsBookingRef;
            lhsBookingRef = this.getBookingRef();
            String rhsBookingRef;
            rhsBookingRef = that.getBookingRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bookingRef", lhsBookingRef), LocatorUtils.property(thatLocator, "bookingRef", rhsBookingRef), lhsBookingRef, rhsBookingRef)) {
                return false;
            }
        }
        {
            String lhsComresSessionId;
            lhsComresSessionId = this.getComresSessionId();
            String rhsComresSessionId;
            rhsComresSessionId = that.getComresSessionId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "comresSessionId", lhsComresSessionId), LocatorUtils.property(thatLocator, "comresSessionId", rhsComresSessionId), lhsComresSessionId, rhsComresSessionId)) {
                return false;
            }
        }
        {
            String lhsBookingHoldRef;
            lhsBookingHoldRef = this.getBookingHoldRef();
            String rhsBookingHoldRef;
            rhsBookingHoldRef = that.getBookingHoldRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bookingHoldRef", lhsBookingHoldRef), LocatorUtils.property(thatLocator, "bookingHoldRef", rhsBookingHoldRef), lhsBookingHoldRef, rhsBookingHoldRef)) {
                return false;
            }
        }
        {
            String lhsBookingHoldType;
            lhsBookingHoldType = this.getBookingHoldType();
            String rhsBookingHoldType;
            rhsBookingHoldType = that.getBookingHoldType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bookingHoldType", lhsBookingHoldType), LocatorUtils.property(thatLocator, "bookingHoldType", rhsBookingHoldType), lhsBookingHoldType, rhsBookingHoldType)) {
                return false;
            }
        }
        {
            String lhsConsultationRef;
            lhsConsultationRef = this.getConsultationRef();
            String rhsConsultationRef;
            rhsConsultationRef = that.getConsultationRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "consultationRef", lhsConsultationRef), LocatorUtils.property(thatLocator, "consultationRef", rhsConsultationRef), lhsConsultationRef, rhsConsultationRef)) {
                return false;
            }
        }
        {
            BookingStatusTypeEnum lhsBookingStatus;
            lhsBookingStatus = this.getBookingStatus();
            BookingStatusTypeEnum rhsBookingStatus;
            rhsBookingStatus = that.getBookingStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bookingStatus", lhsBookingStatus), LocatorUtils.property(thatLocator, "bookingStatus", rhsBookingStatus), lhsBookingStatus, rhsBookingStatus)) {
                return false;
            }
        }
        {
            String lhsSecureFromDeposit;
            lhsSecureFromDeposit = this.getSecureFromDeposit();
            String rhsSecureFromDeposit;
            rhsSecureFromDeposit = that.getSecureFromDeposit();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "secureFromDeposit", lhsSecureFromDeposit), LocatorUtils.property(thatLocator, "secureFromDeposit", rhsSecureFromDeposit), lhsSecureFromDeposit, rhsSecureFromDeposit)) {
                return false;
            }
        }
        {
            String lhsAgentNumber;
            lhsAgentNumber = this.getAgentNumber();
            String rhsAgentNumber;
            rhsAgentNumber = that.getAgentNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "agentNumber", lhsAgentNumber), LocatorUtils.property(thatLocator, "agentNumber", rhsAgentNumber), lhsAgentNumber, rhsAgentNumber)) {
                return false;
            }
        }
        {
            Boolean lhsPaymentRequired;
            lhsPaymentRequired = this.getPaymentRequired();
            Boolean rhsPaymentRequired;
            rhsPaymentRequired = that.getPaymentRequired();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentRequired", lhsPaymentRequired), LocatorUtils.property(thatLocator, "paymentRequired", rhsPaymentRequired), lhsPaymentRequired, rhsPaymentRequired)) {
                return false;
            }
        }
        {
            String lhsPaymentTransactionLock;
            lhsPaymentTransactionLock = this.getPaymentTransactionLock();
            String rhsPaymentTransactionLock;
            rhsPaymentTransactionLock = that.getPaymentTransactionLock();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentTransactionLock", lhsPaymentTransactionLock), LocatorUtils.property(thatLocator, "paymentTransactionLock", rhsPaymentTransactionLock), lhsPaymentTransactionLock, rhsPaymentTransactionLock)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theLanguage;
            theLanguage = this.getLanguage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "language", theLanguage), currentHashCode, theLanguage);
        }
        {
            String theCurrencyCode;
            theCurrencyCode = this.getCurrencyCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "currencyCode", theCurrencyCode), currentHashCode, theCurrencyCode);
        }
        {
            Context theContext;
            theContext = this.getContext();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "context", theContext), currentHashCode, theContext);
        }
        {
            com.yuranos.session.model.Package thePackage;
            thePackage = this.getPackage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "_package", thePackage), currentHashCode, thePackage);
        }
        {
            List<Passenger> thePassengerList;
            thePassengerList = (((this.passengerList!= null)&&(!this.passengerList.isEmpty()))?this.getPassengerList():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "passengerList", thePassengerList), currentHashCode, thePassengerList);
        }
        {
            Insurances theInsurances;
            theInsurances = this.getInsurances();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "insurances", theInsurances), currentHashCode, theInsurances);
        }
        {
            Extras theExtras;
            theExtras = this.getExtras();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "extras", theExtras), currentHashCode, theExtras);
        }
        {
            List<AvtPackage> theAvailFlightList;
            theAvailFlightList = (((this.availFlightList!= null)&&(!this.availFlightList.isEmpty()))?this.getAvailFlightList():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "availFlightList", theAvailFlightList), currentHashCode, theAvailFlightList);
        }
        {
            ContactDetail theContactDetails;
            theContactDetails = this.getContactDetails();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contactDetails", theContactDetails), currentHashCode, theContactDetails);
        }
        {
            CostSummary theCostSummary;
            theCostSummary = this.getCostSummary();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "costSummary", theCostSummary), currentHashCode, theCostSummary);
        }
        {
            List<PaymentCombination> thePaymentOptionList;
            thePaymentOptionList = (((this.paymentOptionList!= null)&&(!this.paymentOptionList.isEmpty()))?this.getPaymentOptionList():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentOptionList", thePaymentOptionList), currentHashCode, thePaymentOptionList);
        }
        {
            List<PaymentGroup> thePaymentGroupsList;
            thePaymentGroupsList = (((this.paymentGroupsList!= null)&&(!this.paymentGroupsList.isEmpty()))?this.getPaymentGroupsList():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentGroupsList", thePaymentGroupsList), currentHashCode, thePaymentGroupsList);
        }
        {
            List<SessionStack> theSessionStack;
            theSessionStack = (((this.sessionStack!= null)&&(!this.sessionStack.isEmpty()))?this.getSessionStack():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sessionStack", theSessionStack), currentHashCode, theSessionStack);
        }
        {
            CardPaymentDetails thePaymentDetails;
            thePaymentDetails = this.getPaymentDetails();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentDetails", thePaymentDetails), currentHashCode, thePaymentDetails);
        }
        {
            Basket.Promotion thePromotion;
            thePromotion = this.getPromotion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "promotion", thePromotion), currentHashCode, thePromotion);
        }
        {
            boolean theUserIsLogged;
            theUserIsLogged = (true?this.isUserIsLogged():false);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userIsLogged", theUserIsLogged), currentHashCode, theUserIsLogged);
        }
        {
            Test theTest;
            theTest = this.getTest();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "test", theTest), currentHashCode, theTest);
        }
        {
            String theBookingRef;
            theBookingRef = this.getBookingRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bookingRef", theBookingRef), currentHashCode, theBookingRef);
        }
        {
            String theComresSessionId;
            theComresSessionId = this.getComresSessionId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "comresSessionId", theComresSessionId), currentHashCode, theComresSessionId);
        }
        {
            String theBookingHoldRef;
            theBookingHoldRef = this.getBookingHoldRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bookingHoldRef", theBookingHoldRef), currentHashCode, theBookingHoldRef);
        }
        {
            String theBookingHoldType;
            theBookingHoldType = this.getBookingHoldType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bookingHoldType", theBookingHoldType), currentHashCode, theBookingHoldType);
        }
        {
            String theConsultationRef;
            theConsultationRef = this.getConsultationRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "consultationRef", theConsultationRef), currentHashCode, theConsultationRef);
        }
        {
            BookingStatusTypeEnum theBookingStatus;
            theBookingStatus = this.getBookingStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bookingStatus", theBookingStatus), currentHashCode, theBookingStatus);
        }
        {
            String theSecureFromDeposit;
            theSecureFromDeposit = this.getSecureFromDeposit();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "secureFromDeposit", theSecureFromDeposit), currentHashCode, theSecureFromDeposit);
        }
        {
            String theAgentNumber;
            theAgentNumber = this.getAgentNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "agentNumber", theAgentNumber), currentHashCode, theAgentNumber);
        }
        {
            Boolean thePaymentRequired;
            thePaymentRequired = this.getPaymentRequired();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentRequired", thePaymentRequired), currentHashCode, thePaymentRequired);
        }
        {
            String thePaymentTransactionLock;
            thePaymentTransactionLock = this.getPaymentTransactionLock();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentTransactionLock", thePaymentTransactionLock), currentHashCode, thePaymentTransactionLock);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            String theLanguage;
            theLanguage = this.getLanguage();
            strategy.appendField(locator, this, "language", buffer, theLanguage);
        }
        {
            String theCurrencyCode;
            theCurrencyCode = this.getCurrencyCode();
            strategy.appendField(locator, this, "currencyCode", buffer, theCurrencyCode);
        }
        {
            Context theContext;
            theContext = this.getContext();
            strategy.appendField(locator, this, "context", buffer, theContext);
        }
        {
            com.yuranos.session.model.Package thePackage;
            thePackage = this.getPackage();
            strategy.appendField(locator, this, "_package", buffer, thePackage);
        }
        {
            List<Passenger> thePassengerList;
            thePassengerList = (((this.passengerList!= null)&&(!this.passengerList.isEmpty()))?this.getPassengerList():null);
            strategy.appendField(locator, this, "passengerList", buffer, thePassengerList);
        }
        {
            Insurances theInsurances;
            theInsurances = this.getInsurances();
            strategy.appendField(locator, this, "insurances", buffer, theInsurances);
        }
        {
            Extras theExtras;
            theExtras = this.getExtras();
            strategy.appendField(locator, this, "extras", buffer, theExtras);
        }
        {
            List<AvtPackage> theAvailFlightList;
            theAvailFlightList = (((this.availFlightList!= null)&&(!this.availFlightList.isEmpty()))?this.getAvailFlightList():null);
            strategy.appendField(locator, this, "availFlightList", buffer, theAvailFlightList);
        }
        {
            ContactDetail theContactDetails;
            theContactDetails = this.getContactDetails();
            strategy.appendField(locator, this, "contactDetails", buffer, theContactDetails);
        }
        {
            CostSummary theCostSummary;
            theCostSummary = this.getCostSummary();
            strategy.appendField(locator, this, "costSummary", buffer, theCostSummary);
        }
        {
            List<PaymentCombination> thePaymentOptionList;
            thePaymentOptionList = (((this.paymentOptionList!= null)&&(!this.paymentOptionList.isEmpty()))?this.getPaymentOptionList():null);
            strategy.appendField(locator, this, "paymentOptionList", buffer, thePaymentOptionList);
        }
        {
            List<PaymentGroup> thePaymentGroupsList;
            thePaymentGroupsList = (((this.paymentGroupsList!= null)&&(!this.paymentGroupsList.isEmpty()))?this.getPaymentGroupsList():null);
            strategy.appendField(locator, this, "paymentGroupsList", buffer, thePaymentGroupsList);
        }
        {
            List<SessionStack> theSessionStack;
            theSessionStack = (((this.sessionStack!= null)&&(!this.sessionStack.isEmpty()))?this.getSessionStack():null);
            strategy.appendField(locator, this, "sessionStack", buffer, theSessionStack);
        }
        {
            CardPaymentDetails thePaymentDetails;
            thePaymentDetails = this.getPaymentDetails();
            strategy.appendField(locator, this, "paymentDetails", buffer, thePaymentDetails);
        }
        {
            Basket.Promotion thePromotion;
            thePromotion = this.getPromotion();
            strategy.appendField(locator, this, "promotion", buffer, thePromotion);
        }
        {
            boolean theUserIsLogged;
            theUserIsLogged = (true?this.isUserIsLogged():false);
            strategy.appendField(locator, this, "userIsLogged", buffer, theUserIsLogged);
        }
        {
            Test theTest;
            theTest = this.getTest();
            strategy.appendField(locator, this, "test", buffer, theTest);
        }
        {
            String theBookingRef;
            theBookingRef = this.getBookingRef();
            strategy.appendField(locator, this, "bookingRef", buffer, theBookingRef);
        }
        {
            String theComresSessionId;
            theComresSessionId = this.getComresSessionId();
            strategy.appendField(locator, this, "comresSessionId", buffer, theComresSessionId);
        }
        {
            String theBookingHoldRef;
            theBookingHoldRef = this.getBookingHoldRef();
            strategy.appendField(locator, this, "bookingHoldRef", buffer, theBookingHoldRef);
        }
        {
            String theBookingHoldType;
            theBookingHoldType = this.getBookingHoldType();
            strategy.appendField(locator, this, "bookingHoldType", buffer, theBookingHoldType);
        }
        {
            String theConsultationRef;
            theConsultationRef = this.getConsultationRef();
            strategy.appendField(locator, this, "consultationRef", buffer, theConsultationRef);
        }
        {
            BookingStatusTypeEnum theBookingStatus;
            theBookingStatus = this.getBookingStatus();
            strategy.appendField(locator, this, "bookingStatus", buffer, theBookingStatus);
        }
        {
            String theSecureFromDeposit;
            theSecureFromDeposit = this.getSecureFromDeposit();
            strategy.appendField(locator, this, "secureFromDeposit", buffer, theSecureFromDeposit);
        }
        {
            String theAgentNumber;
            theAgentNumber = this.getAgentNumber();
            strategy.appendField(locator, this, "agentNumber", buffer, theAgentNumber);
        }
        {
            Boolean thePaymentRequired;
            thePaymentRequired = this.getPaymentRequired();
            strategy.appendField(locator, this, "paymentRequired", buffer, thePaymentRequired);
        }
        {
            String thePaymentTransactionLock;
            thePaymentTransactionLock = this.getPaymentTransactionLock();
            strategy.appendField(locator, this, "paymentTransactionLock", buffer, thePaymentTransactionLock);
        }
        return buffer;
    }

    /**
     * Sets the value of the passengerList property.
     *
     * @param passengerList
     *     allowed object is
     *     {@link Passenger }
     *
     */
    public void setPassengerList(List<Passenger> passengerList) {
        this.passengerList = passengerList;
    }

    /**
     * Sets the value of the availFlightList property.
     *
     * @param availFlightList
     *     allowed object is
     *     {@link AvtPackage }
     *
     */
    public void setAvailFlightList(List<AvtPackage> availFlightList) {
        this.availFlightList = availFlightList;
    }

    /**
     * Sets the value of the paymentOptionList property.
     *
     * @param paymentOptionList
     *     allowed object is
     *     {@link PaymentCombination }
     *
     */
    public void setPaymentOptionList(List<PaymentCombination> paymentOptionList) {
        this.paymentOptionList = paymentOptionList;
    }

    /**
     * Sets the value of the paymentGroupsList property.
     *
     * @param paymentGroupsList
     *     allowed object is
     *     {@link PaymentGroup }
     *
     */
    public void setPaymentGroupsList(List<PaymentGroup> paymentGroupsList) {
        this.paymentGroupsList = paymentGroupsList;
    }

    /**
     * Sets the value of the sessionStack property.
     *
     * @param sessionStack
     *     allowed object is
     *     {@link SessionStack }
     *
     */
    public void setSessionStack(List<SessionStack> sessionStack) {
        this.sessionStack = sessionStack;
    }


    /**
     * <p>Java class for anonymous complex type.
     *
     * <p>The following schema fragment specifies the expected content contained within this class.
     *
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="providerCodes" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
     *       &lt;/sequence>
     *       &lt;attribute name="PromoCode" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="paymentGroup" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="promotionPerson" type="{http://www.w3.org/2001/XMLSchema}integer" />
     *       &lt;attribute name="PromoDiscount" type="{http://api.thomascook.com/basket/1.0/common}Money" />
     *       &lt;attribute name="PromoType" type="{http://api.thomascook.com/basket/1.0/common}PromoTypeEnum" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     *
     *
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "providerCodes"
    })
    public static class Promotion
        implements Serializable, Equals, HashCode, ToString
    {

        private final static long serialVersionUID = 12345L;
        @XmlElement(namespace = "http://api.thomascook.com/basket/1.0/basket")
        protected List<String> providerCodes;
        @XmlAttribute(name = "PromoCode", required = true)
        @NotNull
        protected String promoCode;
        @XmlAttribute(name = "paymentGroup")
        protected String paymentGroup;
        @XmlAttribute(name = "promotionPerson")
        protected BigInteger promotionPerson;
        @XmlAttribute(name = "PromoDiscount")
        @Digits(integer = 10, fraction = 2)
        protected BigDecimal promoDiscount;
        @XmlAttribute(name = "PromoType")
        protected PromoTypeEnum promoType;

        /**
         * Gets the value of the providerCodes property.
         *
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the providerCodes property.
         *
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getProviderCodes().add(newItem);
         * </pre>
         *
         *
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link String }
         *
         *
         */
        public List<String> getProviderCodes() {
            if (providerCodes == null) {
                providerCodes = new ArrayList<String>();
            }
            return this.providerCodes;
        }

        /**
         * Gets the value of the promoCode property.
         *
         * @return
         *     possible object is
         *     {@link String }
         *
         */
        public String getPromoCode() {
            return promoCode;
        }

        /**
         * Sets the value of the promoCode property.
         *
         * @param value
         *     allowed object is
         *     {@link String }
         *
         */
        public void setPromoCode(String value) {
            this.promoCode = value;
        }

        /**
         * Gets the value of the paymentGroup property.
         *
         * @return
         *     possible object is
         *     {@link String }
         *
         */
        public String getPaymentGroup() {
            return paymentGroup;
        }

        /**
         * Sets the value of the paymentGroup property.
         *
         * @param value
         *     allowed object is
         *     {@link String }
         *
         */
        public void setPaymentGroup(String value) {
            this.paymentGroup = value;
        }

        /**
         * Gets the value of the promotionPerson property.
         *
         * @return
         *     possible object is
         *     {@link BigInteger }
         *
         */
        public BigInteger getPromotionPerson() {
            return promotionPerson;
        }

        /**
         * Sets the value of the promotionPerson property.
         *
         * @param value
         *     allowed object is
         *     {@link BigInteger }
         *
         */
        public void setPromotionPerson(BigInteger value) {
            this.promotionPerson = value;
        }

        /**
         * Gets the value of the promoDiscount property.
         *
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *
         */
        public BigDecimal getPromoDiscount() {
            return promoDiscount;
        }

        /**
         * Sets the value of the promoDiscount property.
         *
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *
         */
        public void setPromoDiscount(BigDecimal value) {
            this.promoDiscount = value;
        }

        /**
         * Gets the value of the promoType property.
         *
         * @return
         *     possible object is
         *     {@link PromoTypeEnum }
         *
         */
        public PromoTypeEnum getPromoType() {
            return promoType;
        }

        /**
         * Sets the value of the promoType property.
         *
         * @param value
         *     allowed object is
         *     {@link PromoTypeEnum }
         *
         */
        public void setPromoType(PromoTypeEnum value) {
            this.promoType = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof Basket.Promotion)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final Basket.Promotion that = ((Basket.Promotion) object);
            {
                List<String> lhsProviderCodes;
                lhsProviderCodes = (((this.providerCodes!= null)&&(!this.providerCodes.isEmpty()))?this.getProviderCodes():null);
                List<String> rhsProviderCodes;
                rhsProviderCodes = (((that.providerCodes!= null)&&(!that.providerCodes.isEmpty()))?that.getProviderCodes():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "providerCodes", lhsProviderCodes), LocatorUtils.property(thatLocator, "providerCodes", rhsProviderCodes), lhsProviderCodes, rhsProviderCodes)) {
                    return false;
                }
            }
            {
                String lhsPromoCode;
                lhsPromoCode = this.getPromoCode();
                String rhsPromoCode;
                rhsPromoCode = that.getPromoCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "promoCode", lhsPromoCode), LocatorUtils.property(thatLocator, "promoCode", rhsPromoCode), lhsPromoCode, rhsPromoCode)) {
                    return false;
                }
            }
            {
                String lhsPaymentGroup;
                lhsPaymentGroup = this.getPaymentGroup();
                String rhsPaymentGroup;
                rhsPaymentGroup = that.getPaymentGroup();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentGroup", lhsPaymentGroup), LocatorUtils.property(thatLocator, "paymentGroup", rhsPaymentGroup), lhsPaymentGroup, rhsPaymentGroup)) {
                    return false;
                }
            }
            {
                BigInteger lhsPromotionPerson;
                lhsPromotionPerson = this.getPromotionPerson();
                BigInteger rhsPromotionPerson;
                rhsPromotionPerson = that.getPromotionPerson();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "promotionPerson", lhsPromotionPerson), LocatorUtils.property(thatLocator, "promotionPerson", rhsPromotionPerson), lhsPromotionPerson, rhsPromotionPerson)) {
                    return false;
                }
            }
            {
                BigDecimal lhsPromoDiscount;
                lhsPromoDiscount = this.getPromoDiscount();
                BigDecimal rhsPromoDiscount;
                rhsPromoDiscount = that.getPromoDiscount();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "promoDiscount", lhsPromoDiscount), LocatorUtils.property(thatLocator, "promoDiscount", rhsPromoDiscount), lhsPromoDiscount, rhsPromoDiscount)) {
                    return false;
                }
            }
            {
                PromoTypeEnum lhsPromoType;
                lhsPromoType = this.getPromoType();
                PromoTypeEnum rhsPromoType;
                rhsPromoType = that.getPromoType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "promoType", lhsPromoType), LocatorUtils.property(thatLocator, "promoType", rhsPromoType), lhsPromoType, rhsPromoType)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                List<String> theProviderCodes;
                theProviderCodes = (((this.providerCodes!= null)&&(!this.providerCodes.isEmpty()))?this.getProviderCodes():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "providerCodes", theProviderCodes), currentHashCode, theProviderCodes);
            }
            {
                String thePromoCode;
                thePromoCode = this.getPromoCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "promoCode", thePromoCode), currentHashCode, thePromoCode);
            }
            {
                String thePaymentGroup;
                thePaymentGroup = this.getPaymentGroup();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentGroup", thePaymentGroup), currentHashCode, thePaymentGroup);
            }
            {
                BigInteger thePromotionPerson;
                thePromotionPerson = this.getPromotionPerson();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "promotionPerson", thePromotionPerson), currentHashCode, thePromotionPerson);
            }
            {
                BigDecimal thePromoDiscount;
                thePromoDiscount = this.getPromoDiscount();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "promoDiscount", thePromoDiscount), currentHashCode, thePromoDiscount);
            }
            {
                PromoTypeEnum thePromoType;
                thePromoType = this.getPromoType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "promoType", thePromoType), currentHashCode, thePromoType);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                List<String> theProviderCodes;
                theProviderCodes = (((this.providerCodes!= null)&&(!this.providerCodes.isEmpty()))?this.getProviderCodes():null);
                strategy.appendField(locator, this, "providerCodes", buffer, theProviderCodes);
            }
            {
                String thePromoCode;
                thePromoCode = this.getPromoCode();
                strategy.appendField(locator, this, "promoCode", buffer, thePromoCode);
            }
            {
                String thePaymentGroup;
                thePaymentGroup = this.getPaymentGroup();
                strategy.appendField(locator, this, "paymentGroup", buffer, thePaymentGroup);
            }
            {
                BigInteger thePromotionPerson;
                thePromotionPerson = this.getPromotionPerson();
                strategy.appendField(locator, this, "promotionPerson", buffer, thePromotionPerson);
            }
            {
                BigDecimal thePromoDiscount;
                thePromoDiscount = this.getPromoDiscount();
                strategy.appendField(locator, this, "promoDiscount", buffer, thePromoDiscount);
            }
            {
                PromoTypeEnum thePromoType;
                thePromoType = this.getPromoType();
                strategy.appendField(locator, this, "promoType", buffer, thePromoType);
            }
            return buffer;
        }

        /**
         * Sets the value of the providerCodes property.
         * 
         * @param providerCodes
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setProviderCodes(List<String> providerCodes) {
            this.providerCodes = providerCodes;
        }

    }

}
