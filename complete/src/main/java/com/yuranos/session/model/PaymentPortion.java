//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.07 at 03:28:23 PM EET 
//


package com.yuranos.session.model;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.validation.Valid;
import javax.validation.constraints.Digits;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for PaymentPortion complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PaymentPortion">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="PaymentOption" type="{http://api.thomascook.com/basket/1.0/common}PaymentOption" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="Name" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="Default" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="OriginalPrice" type="{http://api.thomascook.com/basket/1.0/common}Money" />
 *       &lt;attribute name="DueDate" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PaymentPortion", propOrder = {
    "paymentOption"
})
public class PaymentPortion
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 12345L;
    @XmlElement(name = "PaymentOption")
    @Valid
    protected List<PaymentOption> paymentOption;
    @XmlAttribute(name = "Name")
    protected String name;
    @XmlAttribute(name = "Default")
    protected Boolean _default;
    @XmlAttribute(name = "OriginalPrice")
    @Digits(integer = 10, fraction = 2)
    protected BigDecimal originalPrice;
    @XmlAttribute(name = "DueDate")
    protected String dueDate;

    /**
     * Gets the value of the paymentOption property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the paymentOption property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPaymentOption().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PaymentOption }
     * 
     * 
     */
    public List<PaymentOption> getPaymentOption() {
        if (paymentOption == null) {
            paymentOption = new ArrayList<PaymentOption>();
        }
        return this.paymentOption;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the default property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean getDefault() {
        return _default;
    }

    /**
     * Sets the value of the default property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDefault(Boolean value) {
        this._default = value;
    }

    /**
     * Gets the value of the originalPrice property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getOriginalPrice() {
        return originalPrice;
    }

    /**
     * Sets the value of the originalPrice property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setOriginalPrice(BigDecimal value) {
        this.originalPrice = value;
    }

    /**
     * Gets the value of the dueDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDueDate() {
        return dueDate;
    }

    /**
     * Sets the value of the dueDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDueDate(String value) {
        this.dueDate = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PaymentPortion)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PaymentPortion that = ((PaymentPortion) object);
        {
            List<PaymentOption> lhsPaymentOption;
            lhsPaymentOption = (((this.paymentOption!= null)&&(!this.paymentOption.isEmpty()))?this.getPaymentOption():null);
            List<PaymentOption> rhsPaymentOption;
            rhsPaymentOption = (((that.paymentOption!= null)&&(!that.paymentOption.isEmpty()))?that.getPaymentOption():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentOption", lhsPaymentOption), LocatorUtils.property(thatLocator, "paymentOption", rhsPaymentOption), lhsPaymentOption, rhsPaymentOption)) {
                return false;
            }
        }
        {
            String lhsName;
            lhsName = this.getName();
            String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            Boolean lhsDefault;
            lhsDefault = this.getDefault();
            Boolean rhsDefault;
            rhsDefault = that.getDefault();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "_default", lhsDefault), LocatorUtils.property(thatLocator, "_default", rhsDefault), lhsDefault, rhsDefault)) {
                return false;
            }
        }
        {
            BigDecimal lhsOriginalPrice;
            lhsOriginalPrice = this.getOriginalPrice();
            BigDecimal rhsOriginalPrice;
            rhsOriginalPrice = that.getOriginalPrice();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "originalPrice", lhsOriginalPrice), LocatorUtils.property(thatLocator, "originalPrice", rhsOriginalPrice), lhsOriginalPrice, rhsOriginalPrice)) {
                return false;
            }
        }
        {
            String lhsDueDate;
            lhsDueDate = this.getDueDate();
            String rhsDueDate;
            rhsDueDate = that.getDueDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dueDate", lhsDueDate), LocatorUtils.property(thatLocator, "dueDate", rhsDueDate), lhsDueDate, rhsDueDate)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<PaymentOption> thePaymentOption;
            thePaymentOption = (((this.paymentOption!= null)&&(!this.paymentOption.isEmpty()))?this.getPaymentOption():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentOption", thePaymentOption), currentHashCode, thePaymentOption);
        }
        {
            String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            Boolean theDefault;
            theDefault = this.getDefault();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "_default", theDefault), currentHashCode, theDefault);
        }
        {
            BigDecimal theOriginalPrice;
            theOriginalPrice = this.getOriginalPrice();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "originalPrice", theOriginalPrice), currentHashCode, theOriginalPrice);
        }
        {
            String theDueDate;
            theDueDate = this.getDueDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dueDate", theDueDate), currentHashCode, theDueDate);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<PaymentOption> thePaymentOption;
            thePaymentOption = (((this.paymentOption!= null)&&(!this.paymentOption.isEmpty()))?this.getPaymentOption():null);
            strategy.appendField(locator, this, "paymentOption", buffer, thePaymentOption);
        }
        {
            String theName;
            theName = this.getName();
            strategy.appendField(locator, this, "name", buffer, theName);
        }
        {
            Boolean theDefault;
            theDefault = this.getDefault();
            strategy.appendField(locator, this, "_default", buffer, theDefault);
        }
        {
            BigDecimal theOriginalPrice;
            theOriginalPrice = this.getOriginalPrice();
            strategy.appendField(locator, this, "originalPrice", buffer, theOriginalPrice);
        }
        {
            String theDueDate;
            theDueDate = this.getDueDate();
            strategy.appendField(locator, this, "dueDate", buffer, theDueDate);
        }
        return buffer;
    }

    /**
     * Sets the value of the paymentOption property.
     * 
     * @param paymentOption
     *     allowed object is
     *     {@link PaymentOption }
     *     
     */
    public void setPaymentOption(List<PaymentOption> paymentOption) {
        this.paymentOption = paymentOption;
    }

}
