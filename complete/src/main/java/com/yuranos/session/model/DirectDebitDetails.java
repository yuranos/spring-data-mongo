//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.07 at 03:28:23 PM EET 
//


package com.yuranos.session.model;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.validation.Valid;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import java.io.Serializable;


/**
 * <p>Java class for DirectDebitDetails complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DirectDebitDetails">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="GoCardlessSubscription" type="{http://api.thomascook.com/basket/1.0/payment}GoCardlessSubscription" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="gclCustomerID" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="gclMandateID" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="gclSubscriptionID" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="successRedirectUrl" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="redirectFlowId" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="timestamp" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="directDebitStatus" type="{http://api.thomascook.com/basket/1.0/payment}DirectDebitStatus" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DirectDebitDetails", namespace = "http://api.thomascook.com/basket/1.0/payment", propOrder = {
    "goCardlessSubscription"
})
public class DirectDebitDetails
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 12345L;
    @XmlElement(name = "GoCardlessSubscription")
    @Valid
    protected GoCardlessSubscription goCardlessSubscription;
    @XmlAttribute(name = "gclCustomerID")
    protected String gclCustomerID;
    @XmlAttribute(name = "gclMandateID")
    protected String gclMandateID;
    @XmlAttribute(name = "gclSubscriptionID")
    protected String gclSubscriptionID;
    @XmlAttribute(name = "successRedirectUrl")
    protected String successRedirectUrl;
    @XmlAttribute(name = "redirectFlowId")
    protected String redirectFlowId;
    @XmlAttribute(name = "timestamp")
    protected String timestamp;
    @XmlAttribute(name = "directDebitStatus")
    protected DirectDebitStatus directDebitStatus;

    /**
     * Gets the value of the goCardlessSubscription property.
     * 
     * @return
     *     possible object is
     *     {@link GoCardlessSubscription }
     *     
     */
    public GoCardlessSubscription getGoCardlessSubscription() {
        return goCardlessSubscription;
    }

    /**
     * Sets the value of the goCardlessSubscription property.
     * 
     * @param value
     *     allowed object is
     *     {@link GoCardlessSubscription }
     *     
     */
    public void setGoCardlessSubscription(GoCardlessSubscription value) {
        this.goCardlessSubscription = value;
    }

    /**
     * Gets the value of the gclCustomerID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGclCustomerID() {
        return gclCustomerID;
    }

    /**
     * Sets the value of the gclCustomerID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGclCustomerID(String value) {
        this.gclCustomerID = value;
    }

    /**
     * Gets the value of the gclMandateID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGclMandateID() {
        return gclMandateID;
    }

    /**
     * Sets the value of the gclMandateID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGclMandateID(String value) {
        this.gclMandateID = value;
    }

    /**
     * Gets the value of the gclSubscriptionID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGclSubscriptionID() {
        return gclSubscriptionID;
    }

    /**
     * Sets the value of the gclSubscriptionID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGclSubscriptionID(String value) {
        this.gclSubscriptionID = value;
    }

    /**
     * Gets the value of the successRedirectUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSuccessRedirectUrl() {
        return successRedirectUrl;
    }

    /**
     * Sets the value of the successRedirectUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSuccessRedirectUrl(String value) {
        this.successRedirectUrl = value;
    }

    /**
     * Gets the value of the redirectFlowId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRedirectFlowId() {
        return redirectFlowId;
    }

    /**
     * Sets the value of the redirectFlowId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRedirectFlowId(String value) {
        this.redirectFlowId = value;
    }

    /**
     * Gets the value of the timestamp property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTimestamp() {
        return timestamp;
    }

    /**
     * Sets the value of the timestamp property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTimestamp(String value) {
        this.timestamp = value;
    }

    /**
     * Gets the value of the directDebitStatus property.
     * 
     * @return
     *     possible object is
     *     {@link DirectDebitStatus }
     *     
     */
    public DirectDebitStatus getDirectDebitStatus() {
        return directDebitStatus;
    }

    /**
     * Sets the value of the directDebitStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link DirectDebitStatus }
     *     
     */
    public void setDirectDebitStatus(DirectDebitStatus value) {
        this.directDebitStatus = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof DirectDebitDetails)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final DirectDebitDetails that = ((DirectDebitDetails) object);
        {
            GoCardlessSubscription lhsGoCardlessSubscription;
            lhsGoCardlessSubscription = this.getGoCardlessSubscription();
            GoCardlessSubscription rhsGoCardlessSubscription;
            rhsGoCardlessSubscription = that.getGoCardlessSubscription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "goCardlessSubscription", lhsGoCardlessSubscription), LocatorUtils.property(thatLocator, "goCardlessSubscription", rhsGoCardlessSubscription), lhsGoCardlessSubscription, rhsGoCardlessSubscription)) {
                return false;
            }
        }
        {
            String lhsGclCustomerID;
            lhsGclCustomerID = this.getGclCustomerID();
            String rhsGclCustomerID;
            rhsGclCustomerID = that.getGclCustomerID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "gclCustomerID", lhsGclCustomerID), LocatorUtils.property(thatLocator, "gclCustomerID", rhsGclCustomerID), lhsGclCustomerID, rhsGclCustomerID)) {
                return false;
            }
        }
        {
            String lhsGclMandateID;
            lhsGclMandateID = this.getGclMandateID();
            String rhsGclMandateID;
            rhsGclMandateID = that.getGclMandateID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "gclMandateID", lhsGclMandateID), LocatorUtils.property(thatLocator, "gclMandateID", rhsGclMandateID), lhsGclMandateID, rhsGclMandateID)) {
                return false;
            }
        }
        {
            String lhsGclSubscriptionID;
            lhsGclSubscriptionID = this.getGclSubscriptionID();
            String rhsGclSubscriptionID;
            rhsGclSubscriptionID = that.getGclSubscriptionID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "gclSubscriptionID", lhsGclSubscriptionID), LocatorUtils.property(thatLocator, "gclSubscriptionID", rhsGclSubscriptionID), lhsGclSubscriptionID, rhsGclSubscriptionID)) {
                return false;
            }
        }
        {
            String lhsSuccessRedirectUrl;
            lhsSuccessRedirectUrl = this.getSuccessRedirectUrl();
            String rhsSuccessRedirectUrl;
            rhsSuccessRedirectUrl = that.getSuccessRedirectUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "successRedirectUrl", lhsSuccessRedirectUrl), LocatorUtils.property(thatLocator, "successRedirectUrl", rhsSuccessRedirectUrl), lhsSuccessRedirectUrl, rhsSuccessRedirectUrl)) {
                return false;
            }
        }
        {
            String lhsRedirectFlowId;
            lhsRedirectFlowId = this.getRedirectFlowId();
            String rhsRedirectFlowId;
            rhsRedirectFlowId = that.getRedirectFlowId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "redirectFlowId", lhsRedirectFlowId), LocatorUtils.property(thatLocator, "redirectFlowId", rhsRedirectFlowId), lhsRedirectFlowId, rhsRedirectFlowId)) {
                return false;
            }
        }
        {
            String lhsTimestamp;
            lhsTimestamp = this.getTimestamp();
            String rhsTimestamp;
            rhsTimestamp = that.getTimestamp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "timestamp", lhsTimestamp), LocatorUtils.property(thatLocator, "timestamp", rhsTimestamp), lhsTimestamp, rhsTimestamp)) {
                return false;
            }
        }
        {
            DirectDebitStatus lhsDirectDebitStatus;
            lhsDirectDebitStatus = this.getDirectDebitStatus();
            DirectDebitStatus rhsDirectDebitStatus;
            rhsDirectDebitStatus = that.getDirectDebitStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "directDebitStatus", lhsDirectDebitStatus), LocatorUtils.property(thatLocator, "directDebitStatus", rhsDirectDebitStatus), lhsDirectDebitStatus, rhsDirectDebitStatus)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            GoCardlessSubscription theGoCardlessSubscription;
            theGoCardlessSubscription = this.getGoCardlessSubscription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "goCardlessSubscription", theGoCardlessSubscription), currentHashCode, theGoCardlessSubscription);
        }
        {
            String theGclCustomerID;
            theGclCustomerID = this.getGclCustomerID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "gclCustomerID", theGclCustomerID), currentHashCode, theGclCustomerID);
        }
        {
            String theGclMandateID;
            theGclMandateID = this.getGclMandateID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "gclMandateID", theGclMandateID), currentHashCode, theGclMandateID);
        }
        {
            String theGclSubscriptionID;
            theGclSubscriptionID = this.getGclSubscriptionID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "gclSubscriptionID", theGclSubscriptionID), currentHashCode, theGclSubscriptionID);
        }
        {
            String theSuccessRedirectUrl;
            theSuccessRedirectUrl = this.getSuccessRedirectUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "successRedirectUrl", theSuccessRedirectUrl), currentHashCode, theSuccessRedirectUrl);
        }
        {
            String theRedirectFlowId;
            theRedirectFlowId = this.getRedirectFlowId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "redirectFlowId", theRedirectFlowId), currentHashCode, theRedirectFlowId);
        }
        {
            String theTimestamp;
            theTimestamp = this.getTimestamp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "timestamp", theTimestamp), currentHashCode, theTimestamp);
        }
        {
            DirectDebitStatus theDirectDebitStatus;
            theDirectDebitStatus = this.getDirectDebitStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "directDebitStatus", theDirectDebitStatus), currentHashCode, theDirectDebitStatus);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            GoCardlessSubscription theGoCardlessSubscription;
            theGoCardlessSubscription = this.getGoCardlessSubscription();
            strategy.appendField(locator, this, "goCardlessSubscription", buffer, theGoCardlessSubscription);
        }
        {
            String theGclCustomerID;
            theGclCustomerID = this.getGclCustomerID();
            strategy.appendField(locator, this, "gclCustomerID", buffer, theGclCustomerID);
        }
        {
            String theGclMandateID;
            theGclMandateID = this.getGclMandateID();
            strategy.appendField(locator, this, "gclMandateID", buffer, theGclMandateID);
        }
        {
            String theGclSubscriptionID;
            theGclSubscriptionID = this.getGclSubscriptionID();
            strategy.appendField(locator, this, "gclSubscriptionID", buffer, theGclSubscriptionID);
        }
        {
            String theSuccessRedirectUrl;
            theSuccessRedirectUrl = this.getSuccessRedirectUrl();
            strategy.appendField(locator, this, "successRedirectUrl", buffer, theSuccessRedirectUrl);
        }
        {
            String theRedirectFlowId;
            theRedirectFlowId = this.getRedirectFlowId();
            strategy.appendField(locator, this, "redirectFlowId", buffer, theRedirectFlowId);
        }
        {
            String theTimestamp;
            theTimestamp = this.getTimestamp();
            strategy.appendField(locator, this, "timestamp", buffer, theTimestamp);
        }
        {
            DirectDebitStatus theDirectDebitStatus;
            theDirectDebitStatus = this.getDirectDebitStatus();
            strategy.appendField(locator, this, "directDebitStatus", buffer, theDirectDebitStatus);
        }
        return buffer;
    }

}
