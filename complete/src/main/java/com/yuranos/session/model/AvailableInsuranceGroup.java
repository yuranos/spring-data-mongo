//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.07 at 03:28:23 PM EET 
//


package com.yuranos.session.model;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.validation.Valid;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for AvailableInsuranceGroup complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AvailableInsuranceGroup">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="AvailableInsuranceList" type="{http://api.thomascook.com/basket/1.0/insurance}AvailableInsurance" maxOccurs="99" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attGroup ref="{http://api.thomascook.com/basket/1.0/common}priceTicketDisplayAttributes"/>
 *       &lt;attribute name="default" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AvailableInsuranceGroup", namespace = "http://api.thomascook.com/basket/1.0/insurance", propOrder = {
    "availableInsuranceList"
})
public class AvailableInsuranceGroup
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 12345L;
    @XmlElement(name = "AvailableInsuranceList", nillable = true)
    @Size(min = 0, max = 99)
    @Valid
    protected List<AvailableInsurance> availableInsuranceList;
    @XmlAttribute(name = "default")
    protected Boolean _default;
    @XmlAttribute(name = "UIFamily")
    protected String uiFamily;
    @XmlAttribute(name = "Key")
    protected String key;
    @XmlAttribute(name = "DisplayText")
    protected String displayText;
    @XmlAttribute(name = "displayOrder")
    protected Integer displayOrder;
    @XmlAttribute(name = "PTKey")
    protected String ptKey;
    @XmlAttribute(name = "PriceTicketDisplayText")
    protected String priceTicketDisplayText;

    /**
     * Gets the value of the availableInsuranceList property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the availableInsuranceList property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAvailableInsuranceList().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AvailableInsurance }
     * 
     * 
     */
    public List<AvailableInsurance> getAvailableInsuranceList() {
        if (availableInsuranceList == null) {
            availableInsuranceList = new ArrayList<AvailableInsurance>();
        }
        return this.availableInsuranceList;
    }

    /**
     * Gets the value of the default property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isDefault() {
        if (_default == null) {
            return false;
        } else {
            return _default;
        }
    }

    /**
     * Sets the value of the default property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDefault(Boolean value) {
        this._default = value;
    }

    /**
     * Gets the value of the uiFamily property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUIFamily() {
        return uiFamily;
    }

    /**
     * Sets the value of the uiFamily property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUIFamily(String value) {
        this.uiFamily = value;
    }

    /**
     * Gets the value of the key property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getKey() {
        return key;
    }

    /**
     * Sets the value of the key property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setKey(String value) {
        this.key = value;
    }

    /**
     * Gets the value of the displayText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayText() {
        return displayText;
    }

    /**
     * Sets the value of the displayText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayText(String value) {
        this.displayText = value;
    }

    /**
     * Gets the value of the displayOrder property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getDisplayOrder() {
        return displayOrder;
    }

    /**
     * Sets the value of the displayOrder property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setDisplayOrder(Integer value) {
        this.displayOrder = value;
    }

    /**
     * Gets the value of the ptKey property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPTKey() {
        return ptKey;
    }

    /**
     * Sets the value of the ptKey property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPTKey(String value) {
        this.ptKey = value;
    }

    /**
     * Gets the value of the priceTicketDisplayText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPriceTicketDisplayText() {
        return priceTicketDisplayText;
    }

    /**
     * Sets the value of the priceTicketDisplayText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPriceTicketDisplayText(String value) {
        this.priceTicketDisplayText = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AvailableInsuranceGroup)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AvailableInsuranceGroup that = ((AvailableInsuranceGroup) object);
        {
            List<AvailableInsurance> lhsAvailableInsuranceList;
            lhsAvailableInsuranceList = (((this.availableInsuranceList!= null)&&(!this.availableInsuranceList.isEmpty()))?this.getAvailableInsuranceList():null);
            List<AvailableInsurance> rhsAvailableInsuranceList;
            rhsAvailableInsuranceList = (((that.availableInsuranceList!= null)&&(!that.availableInsuranceList.isEmpty()))?that.getAvailableInsuranceList():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "availableInsuranceList", lhsAvailableInsuranceList), LocatorUtils.property(thatLocator, "availableInsuranceList", rhsAvailableInsuranceList), lhsAvailableInsuranceList, rhsAvailableInsuranceList)) {
                return false;
            }
        }
        {
            boolean lhsDefault;
            lhsDefault = ((this._default!= null)?this.isDefault():false);
            boolean rhsDefault;
            rhsDefault = ((that._default!= null)?that.isDefault():false);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "_default", lhsDefault), LocatorUtils.property(thatLocator, "_default", rhsDefault), lhsDefault, rhsDefault)) {
                return false;
            }
        }
        {
            String lhsUIFamily;
            lhsUIFamily = this.getUIFamily();
            String rhsUIFamily;
            rhsUIFamily = that.getUIFamily();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "uiFamily", lhsUIFamily), LocatorUtils.property(thatLocator, "uiFamily", rhsUIFamily), lhsUIFamily, rhsUIFamily)) {
                return false;
            }
        }
        {
            String lhsKey;
            lhsKey = this.getKey();
            String rhsKey;
            rhsKey = that.getKey();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "key", lhsKey), LocatorUtils.property(thatLocator, "key", rhsKey), lhsKey, rhsKey)) {
                return false;
            }
        }
        {
            String lhsDisplayText;
            lhsDisplayText = this.getDisplayText();
            String rhsDisplayText;
            rhsDisplayText = that.getDisplayText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "displayText", lhsDisplayText), LocatorUtils.property(thatLocator, "displayText", rhsDisplayText), lhsDisplayText, rhsDisplayText)) {
                return false;
            }
        }
        {
            Integer lhsDisplayOrder;
            lhsDisplayOrder = this.getDisplayOrder();
            Integer rhsDisplayOrder;
            rhsDisplayOrder = that.getDisplayOrder();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "displayOrder", lhsDisplayOrder), LocatorUtils.property(thatLocator, "displayOrder", rhsDisplayOrder), lhsDisplayOrder, rhsDisplayOrder)) {
                return false;
            }
        }
        {
            String lhsPTKey;
            lhsPTKey = this.getPTKey();
            String rhsPTKey;
            rhsPTKey = that.getPTKey();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ptKey", lhsPTKey), LocatorUtils.property(thatLocator, "ptKey", rhsPTKey), lhsPTKey, rhsPTKey)) {
                return false;
            }
        }
        {
            String lhsPriceTicketDisplayText;
            lhsPriceTicketDisplayText = this.getPriceTicketDisplayText();
            String rhsPriceTicketDisplayText;
            rhsPriceTicketDisplayText = that.getPriceTicketDisplayText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "priceTicketDisplayText", lhsPriceTicketDisplayText), LocatorUtils.property(thatLocator, "priceTicketDisplayText", rhsPriceTicketDisplayText), lhsPriceTicketDisplayText, rhsPriceTicketDisplayText)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<AvailableInsurance> theAvailableInsuranceList;
            theAvailableInsuranceList = (((this.availableInsuranceList!= null)&&(!this.availableInsuranceList.isEmpty()))?this.getAvailableInsuranceList():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "availableInsuranceList", theAvailableInsuranceList), currentHashCode, theAvailableInsuranceList);
        }
        {
            boolean theDefault;
            theDefault = ((this._default!= null)?this.isDefault():false);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "_default", theDefault), currentHashCode, theDefault);
        }
        {
            String theUIFamily;
            theUIFamily = this.getUIFamily();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "uiFamily", theUIFamily), currentHashCode, theUIFamily);
        }
        {
            String theKey;
            theKey = this.getKey();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "key", theKey), currentHashCode, theKey);
        }
        {
            String theDisplayText;
            theDisplayText = this.getDisplayText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "displayText", theDisplayText), currentHashCode, theDisplayText);
        }
        {
            Integer theDisplayOrder;
            theDisplayOrder = this.getDisplayOrder();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "displayOrder", theDisplayOrder), currentHashCode, theDisplayOrder);
        }
        {
            String thePTKey;
            thePTKey = this.getPTKey();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ptKey", thePTKey), currentHashCode, thePTKey);
        }
        {
            String thePriceTicketDisplayText;
            thePriceTicketDisplayText = this.getPriceTicketDisplayText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "priceTicketDisplayText", thePriceTicketDisplayText), currentHashCode, thePriceTicketDisplayText);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<AvailableInsurance> theAvailableInsuranceList;
            theAvailableInsuranceList = (((this.availableInsuranceList!= null)&&(!this.availableInsuranceList.isEmpty()))?this.getAvailableInsuranceList():null);
            strategy.appendField(locator, this, "availableInsuranceList", buffer, theAvailableInsuranceList);
        }
        {
            boolean theDefault;
            theDefault = ((this._default!= null)?this.isDefault():false);
            strategy.appendField(locator, this, "_default", buffer, theDefault);
        }
        {
            String theUIFamily;
            theUIFamily = this.getUIFamily();
            strategy.appendField(locator, this, "uiFamily", buffer, theUIFamily);
        }
        {
            String theKey;
            theKey = this.getKey();
            strategy.appendField(locator, this, "key", buffer, theKey);
        }
        {
            String theDisplayText;
            theDisplayText = this.getDisplayText();
            strategy.appendField(locator, this, "displayText", buffer, theDisplayText);
        }
        {
            Integer theDisplayOrder;
            theDisplayOrder = this.getDisplayOrder();
            strategy.appendField(locator, this, "displayOrder", buffer, theDisplayOrder);
        }
        {
            String thePTKey;
            thePTKey = this.getPTKey();
            strategy.appendField(locator, this, "ptKey", buffer, thePTKey);
        }
        {
            String thePriceTicketDisplayText;
            thePriceTicketDisplayText = this.getPriceTicketDisplayText();
            strategy.appendField(locator, this, "priceTicketDisplayText", buffer, thePriceTicketDisplayText);
        }
        return buffer;
    }

    /**
     * Sets the value of the availableInsuranceList property.
     * 
     * @param availableInsuranceList
     *     allowed object is
     *     {@link AvailableInsurance }
     *     
     */
    public void setAvailableInsuranceList(List<AvailableInsurance> availableInsuranceList) {
        this.availableInsuranceList = availableInsuranceList;
    }

}
